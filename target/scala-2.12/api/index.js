Index.PACKAGES = {"util" : [{"name" : "util.Tree", "shortDescription" : "", "object" : "util\/Tree$.html", "members_object" : [{"label" : "dfs", "tail" : "(root: A, childs: (A) ⇒ Seq[A]): Seq[A]", "member" : "util.Tree.dfs", "link" : "util\/Tree$.html#dfs[A](root:A,childs:A=>Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "util\/Tree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "util\/Tree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "util\/Tree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "util\/Tree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "util\/Tree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "util\/Tree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "util\/Tree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "util\/Tree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "util\/Tree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "util\/Tree$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "util\/Tree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "util\/Tree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "util\/Tree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "util\/Tree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "util\/Tree$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "util\/Tree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "util\/Tree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "util\/Tree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "util\/Tree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "leafs", "tail" : "(): Seq[A]", "member" : "util.Tree.leafs", "link" : "util\/Tree.html#leafs:Seq[A]", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[A]", "member" : "util.Tree.all", "link" : "util\/Tree.html#all:Seq[A]", "kind" : "def"}, {"member" : "util.Tree#<init>", "error" : "unsupported entity"}, {"label" : "root", "tail" : ": A", "member" : "util.Tree.root", "link" : "util\/Tree.html#root:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "util\/Tree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "util\/Tree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "util\/Tree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "util\/Tree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "util\/Tree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "util\/Tree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "util\/Tree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "util\/Tree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "util\/Tree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "util\/Tree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "util\/Tree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "util\/Tree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "util\/Tree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "util\/Tree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "util\/Tree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "util\/Tree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "util\/Tree.html", "kind" : "case class"}], "math.algebra" : [{"name" : "math.algebra.DoubleField", "shortDescription" : "", "members_case class" : [{"label" : "inverse", "tail" : "(v: Double): Double", "member" : "math.algebra.DoubleField.inverse", "link" : "math\/algebra\/DoubleField.html#inverse(v:Double):Double", "kind" : "def"}, {"label" : "divide", "tail" : "(l: Double, r: Double): Double", "member" : "math.algebra.DoubleField.divide", "link" : "math\/algebra\/DoubleField.html#divide(l:Double,r:Double):Double", "kind" : "def"}, {"label" : "times", "tail" : "(l: Double, r: Double): Double", "member" : "math.algebra.DoubleField.times", "link" : "math\/algebra\/DoubleField.html#times(l:Double,r:Double):Double", "kind" : "def"}, {"label" : "minus", "tail" : "(l: Double, r: Double): Double", "member" : "math.algebra.DoubleField.minus", "link" : "math\/algebra\/DoubleField.html#minus(l:Double,r:Double):Double", "kind" : "def"}, {"label" : "negate", "tail" : "(v: Double): Double", "member" : "math.algebra.DoubleField.negate", "link" : "math\/algebra\/DoubleField.html#negate(v:Double):Double", "kind" : "def"}, {"label" : "plus", "tail" : "(l: Double, r: Double): Double", "member" : "math.algebra.DoubleField.plus", "link" : "math\/algebra\/DoubleField.html#plus(l:Double,r:Double):Double", "kind" : "def"}, {"label" : "one", "tail" : ": Double", "member" : "math.algebra.DoubleField.one", "link" : "math\/algebra\/DoubleField.html#one:Double", "kind" : "val"}, {"label" : "zero", "tail" : ": Double", "member" : "math.algebra.DoubleField.zero", "link" : "math\/algebra\/DoubleField.html#zero:Double", "kind" : "val"}, {"member" : "math.algebra.DoubleField#<init>", "error" : "unsupported entity"}, {"label" : "times", "tail" : "(lr: (Double, Double)): Double", "member" : "math.algebra.Ring.times", "link" : "math\/algebra\/DoubleField.html#times(lr:(A,A)):A", "kind" : "def"}, {"label" : "plus", "tail" : "(lr: (Double, Double)): Double", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/DoubleField.html#plus(lr:(A,A)):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/algebra\/DoubleField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/algebra\/DoubleField.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/algebra\/DoubleField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/algebra\/DoubleField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/algebra\/DoubleField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/algebra\/DoubleField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/algebra\/DoubleField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/DoubleField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/DoubleField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/DoubleField.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/algebra\/DoubleField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/algebra\/DoubleField.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/algebra\/DoubleField.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/algebra\/DoubleField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/algebra\/DoubleField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/algebra\/DoubleField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "math\/algebra\/DoubleField.html", "kind" : "case class"}, {"name" : "math.algebra.Field", "members_trait" : [{"label" : "times", "tail" : "(lr: (A, A)): A", "member" : "math.algebra.Ring.times", "link" : "math\/algebra\/Field.html#times(lr:(A,A)):A", "kind" : "def"}, {"label" : "plus", "tail" : "(lr: (A, A)): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Field.html#plus(lr:(A,A)):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/algebra\/Field.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/algebra\/Field.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/algebra\/Field.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/algebra\/Field.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/algebra\/Field.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/algebra\/Field.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/algebra\/Field.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Field.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Field.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Field.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/algebra\/Field.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/algebra\/Field.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/algebra\/Field.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/algebra\/Field.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/algebra\/Field.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/algebra\/Field.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/algebra\/Field.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/algebra\/Field.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/algebra\/Field.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "inverse", "tail" : "(v: A): A", "member" : "math.algebra.Field.inverse", "link" : "math\/algebra\/Field.html#inverse(v:A):A", "kind" : "abstract def"}, {"label" : "divide", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Field.divide", "link" : "math\/algebra\/Field.html#divide(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "times", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Ring.times", "link" : "math\/algebra\/Field.html#times(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "one", "tail" : "(): A", "member" : "math.algebra.Ring.one", "link" : "math\/algebra\/Field.html#one:A", "kind" : "abstract def"}, {"label" : "minus", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Group.minus", "link" : "math\/algebra\/Field.html#minus(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "negate", "tail" : "(v: A): A", "member" : "math.algebra.Group.negate", "link" : "math\/algebra\/Field.html#negate(v:A):A", "kind" : "abstract def"}, {"label" : "plus", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Field.html#plus(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "zero", "tail" : "(): A", "member" : "math.algebra.Monoid.zero", "link" : "math\/algebra\/Field.html#zero:A", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "math\/algebra\/Field.html", "kind" : "trait"}, {"name" : "math.algebra.Group", "members_trait" : [{"label" : "plus", "tail" : "(lr: (A, A)): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Group.html#plus(lr:(A,A)):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/algebra\/Group.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/algebra\/Group.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/algebra\/Group.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/algebra\/Group.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/algebra\/Group.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/algebra\/Group.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/algebra\/Group.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Group.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Group.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Group.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/algebra\/Group.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/algebra\/Group.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/algebra\/Group.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/algebra\/Group.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/algebra\/Group.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/algebra\/Group.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/algebra\/Group.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/algebra\/Group.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/algebra\/Group.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "minus", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Group.minus", "link" : "math\/algebra\/Group.html#minus(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "negate", "tail" : "(v: A): A", "member" : "math.algebra.Group.negate", "link" : "math\/algebra\/Group.html#negate(v:A):A", "kind" : "abstract def"}, {"label" : "plus", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Group.html#plus(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "zero", "tail" : "(): A", "member" : "math.algebra.Monoid.zero", "link" : "math\/algebra\/Group.html#zero:A", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "math\/algebra\/Group.html", "kind" : "trait"}, {"name" : "math.algebra.Monoid", "members_trait" : [{"label" : "plus", "tail" : "(lr: (A, A)): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Monoid.html#plus(lr:(A,A)):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/algebra\/Monoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/algebra\/Monoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/algebra\/Monoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/algebra\/Monoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/algebra\/Monoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/algebra\/Monoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/algebra\/Monoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Monoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Monoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Monoid.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/algebra\/Monoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/algebra\/Monoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/algebra\/Monoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/algebra\/Monoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/algebra\/Monoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/algebra\/Monoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/algebra\/Monoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/algebra\/Monoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/algebra\/Monoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "plus", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Monoid.html#plus(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "zero", "tail" : "(): A", "member" : "math.algebra.Monoid.zero", "link" : "math\/algebra\/Monoid.html#zero:A", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "math\/algebra\/Monoid.html", "kind" : "trait"}, {"name" : "math.algebra.Ring", "members_trait" : [{"label" : "times", "tail" : "(lr: (A, A)): A", "member" : "math.algebra.Ring.times", "link" : "math\/algebra\/Ring.html#times(lr:(A,A)):A", "kind" : "def"}, {"label" : "plus", "tail" : "(lr: (A, A)): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Ring.html#plus(lr:(A,A)):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/algebra\/Ring.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/algebra\/Ring.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/algebra\/Ring.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/algebra\/Ring.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/algebra\/Ring.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/algebra\/Ring.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/algebra\/Ring.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Ring.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Ring.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/algebra\/Ring.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/algebra\/Ring.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/algebra\/Ring.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/algebra\/Ring.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/algebra\/Ring.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/algebra\/Ring.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/algebra\/Ring.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/algebra\/Ring.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/algebra\/Ring.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/algebra\/Ring.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "times", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Ring.times", "link" : "math\/algebra\/Ring.html#times(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "one", "tail" : "(): A", "member" : "math.algebra.Ring.one", "link" : "math\/algebra\/Ring.html#one:A", "kind" : "abstract def"}, {"label" : "minus", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Group.minus", "link" : "math\/algebra\/Ring.html#minus(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "negate", "tail" : "(v: A): A", "member" : "math.algebra.Group.negate", "link" : "math\/algebra\/Ring.html#negate(v:A):A", "kind" : "abstract def"}, {"label" : "plus", "tail" : "(l: A, r: A): A", "member" : "math.algebra.Monoid.plus", "link" : "math\/algebra\/Ring.html#plus(l:A,r:A):A", "kind" : "abstract def"}, {"label" : "zero", "tail" : "(): A", "member" : "math.algebra.Monoid.zero", "link" : "math\/algebra\/Ring.html#zero:A", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "math\/algebra\/Ring.html", "kind" : "trait"}], "math.lina" : [{"name" : "math.lina.Column", "shortDescription" : "", "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "math\/lina\/Column.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "math.lina.Column.iterator", "link" : "math\/lina\/Column.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): A", "member" : "math.lina.Column.apply", "link" : "math\/lina\/Column.html#apply(i:Int):A", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "math.lina.Column.length", "link" : "math\/lina\/Column.html#length:Int", "kind" : "def"}, {"member" : "math.lina.Column#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Int", "member" : "math.lina.Column.index", "link" : "math\/lina\/Column.html#index:Int", "kind" : "val"}, {"label" : "matrix", "tail" : ": Matrix[A]", "member" : "math.lina.Column.matrix", "link" : "math\/lina\/Column.html#matrix:math.lina.Matrix[A]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[A]", "member" : "scala.collection.Seq.seq", "link" : "math\/lina\/Column.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "math\/lina\/Column.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "math\/lina\/Column.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, Seq[A]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Column.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, Seq[A]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Column.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "math\/lina\/Column.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "math\/lina\/Column.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "math\/lina\/Column.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): Seq[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "math\/lina\/Column.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "math\/lina\/Column.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "math\/lina\/Column.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "math\/lina\/Column.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "math\/lina\/Column.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "math\/lina\/Column.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "math\/lina\/Column.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "math\/lina\/Column.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "math\/lina\/Column.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "math\/lina\/Column.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[A]", "member" : "scala.collection.SeqLike.diff", "link" : "math\/lina\/Column.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "math\/lina\/Column.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "math\/lina\/Column.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "math\/lina\/Column.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Column.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Column.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Column.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Column.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "math\/lina\/Column.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "math\/lina\/Column.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "math\/lina\/Column.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "math\/lina\/Column.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.reverse", "link" : "math\/lina\/Column.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "math\/lina\/Column.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "math\/lina\/Column.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "math\/lina\/Column.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "math\/lina\/Column.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "math\/lina\/Column.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "math\/lina\/Column.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "math\/lina\/Column.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "math\/lina\/Column.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "math\/lina\/Column.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[A]): Seq[A]", "member" : "scala.collection.SeqLike.toCollection", "link" : "math\/lina\/Column.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "math\/lina\/Column.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "math\/lina\/Column.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "math\/lina\/Column.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "math\/lina\/Column.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "math\/lina\/Column.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Column.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Column.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Column.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Column.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "math\/lina\/Column.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "math\/lina\/Column.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "math\/lina\/Column.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "math\/lina\/Column.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "math\/lina\/Column.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "math\/lina\/Column.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[A], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "math\/lina\/Column.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "math\/lina\/Column.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "math\/lina\/Column.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "math\/lina\/Column.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.dropRight", "link" : "math\/lina\/Column.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.takeRight", "link" : "math\/lina\/Column.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Column.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Column.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "math\/lina\/Column.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "math\/lina\/Column.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.drop", "link" : "math\/lina\/Column.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.take", "link" : "math\/lina\/Column.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[A]", "member" : "scala.collection.IterableLike.slice", "link" : "math\/lina\/Column.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IterableLike.head", "link" : "math\/lina\/Column.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "math\/lina\/Column.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "math\/lina\/Column.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "math\/lina\/Column.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "math\/lina\/Column.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IterableLike.find", "link" : "math\/lina\/Column.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "math\/lina\/Column.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "math\/lina\/Column.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "math\/lina\/Column.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "math\/lina\/Column.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "math\/lina\/Column.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "math\/lina\/Column.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "math\/lina\/Column.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "math\/lina\/Column.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, Seq[A]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "math\/lina\/Column.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, Seq[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "math\/lina\/Column.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "math\/lina\/Column.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "math\/lina\/Column.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "math\/lina\/Column.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "math\/lina\/Column.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "math\/lina\/Column.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "math\/lina\/Column.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.span", "link" : "math\/lina\/Column.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "math\/lina\/Column.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.init", "link" : "math\/lina\/Column.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "math\/lina\/Column.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.TraversableLike.last", "link" : "math\/lina\/Column.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.tail", "link" : "math\/lina\/Column.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "math\/lina\/Column.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "math\/lina\/Column.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "math\/lina\/Column.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "math\/lina\/Column.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, Seq[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "math\/lina\/Column.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "math\/lina\/Column.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "math\/lina\/Column.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "math\/lina\/Column.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "math\/lina\/Column.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "math\/lina\/Column.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "math\/lina\/Column.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Column.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Column.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "math\/lina\/Column.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "math\/lina\/Column.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "math\/lina\/Column.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "math\/lina\/Column.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "math\/lina\/Column.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "math\/lina\/Column.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Column.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Column.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Column.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Column.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Column.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Column.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "math\/lina\/Column.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "math\/lina\/Column.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "math\/lina\/Column.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "math\/lina\/Column.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "math\/lina\/Column.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.toList", "link" : "math\/lina\/Column.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "math\/lina\/Column.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Column.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Column.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "math\/lina\/Column.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "math\/lina\/Column.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "math\/lina\/Column.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "math\/lina\/Column.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "math\/lina\/Column.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "math\/lina\/Column.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "math\/lina\/Column.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "math\/lina\/Column.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "math\/lina\/Column.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "math\/lina\/Column.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "math\/lina\/Column.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "math\/lina\/Column.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "math\/lina\/Column.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "math\/lina\/Column.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "math\/lina\/Column.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "math\/lina\/Column.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "math\/lina\/Column.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "math\/lina\/Column.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "math\/lina\/Column.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "math\/lina\/Column.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "math\/lina\/Column.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "math\/lina\/Column.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "math\/lina\/Column.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "math\/lina\/Column.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "math\/lina\/Column.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "math\/lina\/Column.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "math\/lina\/Column.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "math\/lina\/Column.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/Column.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/Column.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/Column.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/Column.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/Column.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/Column.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/Column.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Column.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Column.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Column.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/Column.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/Column.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/Column.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/Column.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/Column.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/Column.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "math\/lina\/Column.html", "kind" : "case class"}, {"name" : "math.lina.Columns", "shortDescription" : "", "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "math\/lina\/Columns.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[Column[A]]", "member" : "math.lina.Columns.iterator", "link" : "math\/lina\/Columns.html#iterator:Iterator[math.lina.Column[A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(j: Int): Column[A]", "member" : "math.lina.Columns.apply", "link" : "math\/lina\/Columns.html#apply(j:Int):math.lina.Column[A]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "math.lina.Columns.length", "link" : "math\/lina\/Columns.html#length:Int", "kind" : "def"}, {"member" : "math.lina.Columns#<init>", "error" : "unsupported entity"}, {"label" : "matrix", "tail" : ": Matrix[A]", "member" : "math.lina.Columns.matrix", "link" : "math\/lina\/Columns.html#matrix:math.lina.Matrix[A]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.Seq.seq", "link" : "math\/lina\/Columns.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "math\/lina\/Columns.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "math\/lina\/Columns.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Column[A], Seq[Column[A]]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Columns.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Column[A], Seq[Column[A]]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Columns.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "math\/lina\/Columns.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.SeqLike.toSeq", "link" : "math\/lina\/Columns.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Column[A]]", "member" : "scala.collection.SeqLike.sorted", "link" : "math\/lina\/Columns.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Column[A]) ⇒ B)(ord: Ordering[B]): Seq[Column[A]]", "member" : "scala.collection.SeqLike.sortBy", "link" : "math\/lina\/Columns.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Column[A], Column[A]) ⇒ Boolean): Seq[Column[A]]", "member" : "scala.collection.SeqLike.sortWith", "link" : "math\/lina\/Columns.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Column[A], B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "math\/lina\/Columns.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "math\/lina\/Columns.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "math\/lina\/Columns.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "math\/lina\/Columns.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "math\/lina\/Columns.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "math\/lina\/Columns.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.SeqLike.distinct", "link" : "math\/lina\/Columns.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[Column[A]]", "member" : "scala.collection.SeqLike.intersect", "link" : "math\/lina\/Columns.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[Column[A]]", "member" : "scala.collection.SeqLike.diff", "link" : "math\/lina\/Columns.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "math\/lina\/Columns.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "math\/lina\/Columns.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "math\/lina\/Columns.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Columns.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Columns.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Columns.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Columns.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "math\/lina\/Columns.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "math\/lina\/Columns.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Column[A]]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "math\/lina\/Columns.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Column[A]) ⇒ B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "math\/lina\/Columns.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.SeqLike.reverse", "link" : "math\/lina\/Columns.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Column[A]]]", "member" : "scala.collection.SeqLike.combinations", "link" : "math\/lina\/Columns.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Column[A]]]", "member" : "scala.collection.SeqLike.permutations", "link" : "math\/lina\/Columns.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Column[A]) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "math\/lina\/Columns.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Column[A]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "math\/lina\/Columns.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Column[A]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "math\/lina\/Columns.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "math\/lina\/Columns.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "math\/lina\/Columns.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "math\/lina\/Columns.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Column[A], ParSeq[Column[A]]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "math\/lina\/Columns.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[Column[A]]): Seq[Column[A]]", "member" : "scala.collection.SeqLike.toCollection", "link" : "math\/lina\/Columns.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "math\/lina\/Columns.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "math\/lina\/Columns.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "math\/lina\/Columns.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "math\/lina\/Columns.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Column[A]) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "math\/lina\/Columns.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Columns.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Columns.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Columns.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Columns.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Column[A]) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "math\/lina\/Columns.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Column[A]) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "math\/lina\/Columns.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "math\/lina\/Columns.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "math\/lina\/Columns.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Column[A]]", "member" : "scala.collection.IterableLike.toStream", "link" : "math\/lina\/Columns.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "math\/lina\/Columns.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[Column[A]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "math\/lina\/Columns.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[Column[A]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "math\/lina\/Columns.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[Column[A]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "math\/lina\/Columns.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "math\/lina\/Columns.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Column[A]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "math\/lina\/Columns.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Column[A]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "math\/lina\/Columns.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Column[A]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Columns.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Column[A]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Columns.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Column[A]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "math\/lina\/Columns.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Column[A]) ⇒ Boolean): Seq[Column[A]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "math\/lina\/Columns.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Column[A]]", "member" : "scala.collection.IterableLike.drop", "link" : "math\/lina\/Columns.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Column[A]]", "member" : "scala.collection.IterableLike.take", "link" : "math\/lina\/Columns.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Column[A]]", "member" : "scala.collection.IterableLike.slice", "link" : "math\/lina\/Columns.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Column[A]", "member" : "scala.collection.IterableLike.head", "link" : "math\/lina\/Columns.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Column[A]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "math\/lina\/Columns.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Column[A]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "math\/lina\/Columns.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Column[A], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "math\/lina\/Columns.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Column[A], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "math\/lina\/Columns.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Column[A]) ⇒ Boolean): Option[Column[A]]", "member" : "scala.collection.IterableLike.find", "link" : "math\/lina\/Columns.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Column[A]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "math\/lina\/Columns.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Column[A]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "math\/lina\/Columns.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Column[A]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "math\/lina\/Columns.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Column[A]) ⇒ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "math\/lina\/Columns.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Column[A]) ⇒ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "math\/lina\/Columns.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Column[A]) ⇒ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "math\/lina\/Columns.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Column[A]) ⇒ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "math\/lina\/Columns.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "math\/lina\/Columns.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Column[A], Seq[Column[A]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "math\/lina\/Columns.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Column[A]) ⇒ Boolean): FilterMonadic[Column[A], Seq[Column[A]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "math\/lina\/Columns.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "math\/lina\/Columns.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Column[A], Col[Column[A]]]): Col[Column[A]]", "member" : "scala.collection.TraversableLike.to", "link" : "math\/lina\/Columns.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Column[A]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "math\/lina\/Columns.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Column[A]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "math\/lina\/Columns.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Column[A]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "math\/lina\/Columns.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Column[A]], Seq[Column[A]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "math\/lina\/Columns.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Column[A]) ⇒ Boolean): (Seq[Column[A]], Seq[Column[A]])", "member" : "scala.collection.TraversableLike.span", "link" : "math\/lina\/Columns.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Column[A]) ⇒ Boolean): Seq[Column[A]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "math\/lina\/Columns.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.TraversableLike.init", "link" : "math\/lina\/Columns.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Column[A]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "math\/lina\/Columns.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Column[A]", "member" : "scala.collection.TraversableLike.last", "link" : "math\/lina\/Columns.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.TraversableLike.tail", "link" : "math\/lina\/Columns.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Column[A]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "math\/lina\/Columns.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Column[A], B) ⇒ B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "math\/lina\/Columns.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Column[A]) ⇒ B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "math\/lina\/Columns.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "math\/lina\/Columns.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Column[A]) ⇒ K): Map[K, Seq[Column[A]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "math\/lina\/Columns.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Column[A]) ⇒ Boolean): (Seq[Column[A]], Seq[Column[A]])", "member" : "scala.collection.TraversableLike.partition", "link" : "math\/lina\/Columns.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Column[A], B])(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "math\/lina\/Columns.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Column[A]) ⇒ Boolean): Seq[Column[A]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "math\/lina\/Columns.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Column[A]) ⇒ Boolean): Seq[Column[A]]", "member" : "scala.collection.TraversableLike.filter", "link" : "math\/lina\/Columns.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Column[A]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "math\/lina\/Columns.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Column[A]) ⇒ B)(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "math\/lina\/Columns.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Columns.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Columns.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Column[A]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "math\/lina\/Columns.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "math\/lina\/Columns.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "math\/lina\/Columns.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[Column[A]]", "member" : "scala.collection.TraversableLike.repr", "link" : "math\/lina\/Columns.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "math\/lina\/Columns.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Column[A]]", "member" : "scala.collection.Parallelizable.par", "link" : "math\/lina\/Columns.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Columns.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Columns.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Columns.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Columns.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Columns.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Columns.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Column[A], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "math\/lina\/Columns.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Column[A]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "math\/lina\/Columns.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "math\/lina\/Columns.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "math\/lina\/Columns.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Column[A]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "math\/lina\/Columns.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Column[A]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "math\/lina\/Columns.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "math\/lina\/Columns.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Columns.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Columns.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "math\/lina\/Columns.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Column[A]) ⇒ B)(cmp: Ordering[B]): Column[A]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "math\/lina\/Columns.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Column[A]) ⇒ B)(cmp: Ordering[B]): Column[A]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "math\/lina\/Columns.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Column[A]", "member" : "scala.collection.TraversableOnce.max", "link" : "math\/lina\/Columns.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Column[A]", "member" : "scala.collection.TraversableOnce.min", "link" : "math\/lina\/Columns.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "math\/lina\/Columns.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "math\/lina\/Columns.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Column[A]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "math\/lina\/Columns.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "math\/lina\/Columns.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "math\/lina\/Columns.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "math\/lina\/Columns.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Column[A], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "math\/lina\/Columns.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Column[A]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "math\/lina\/Columns.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Column[A]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "math\/lina\/Columns.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Column[A]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "math\/lina\/Columns.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Column[A], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "math\/lina\/Columns.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Column[A]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "math\/lina\/Columns.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Column[A], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "math\/lina\/Columns.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Column[A]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "math\/lina\/Columns.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "math\/lina\/Columns.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Column[A]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "math\/lina\/Columns.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "math\/lina\/Columns.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Column[A]) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "math\/lina\/Columns.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "math\/lina\/Columns.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[Column[A]]", "member" : "scala.PartialFunction.lift", "link" : "math\/lina\/Columns.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Column[A]) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "math\/lina\/Columns.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "math\/lina\/Columns.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ Column[A]", "member" : "scala.Function1.compose", "link" : "math\/lina\/Columns.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/Columns.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/Columns.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/Columns.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/Columns.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/Columns.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/Columns.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/Columns.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Columns.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Columns.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Columns.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/Columns.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/Columns.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/Columns.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/Columns.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/Columns.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/Columns.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "math\/lina\/Columns.html", "kind" : "case class"}, {"name" : "math.lina.Elements", "shortDescription" : "", "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "math\/lina\/Elements.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "math.lina.Elements.iterator", "link" : "math\/lina\/Elements.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): A", "member" : "math.lina.Elements.apply", "link" : "math\/lina\/Elements.html#apply(i:Int):A", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "math.lina.Elements.length", "link" : "math\/lina\/Elements.html#length:Int", "kind" : "def"}, {"member" : "math.lina.Elements#<init>", "error" : "unsupported entity"}, {"label" : "byRow", "tail" : ": Boolean", "member" : "math.lina.Elements.byRow", "link" : "math\/lina\/Elements.html#byRow:Boolean", "kind" : "val"}, {"label" : "matrix", "tail" : ": Matrix[A]", "member" : "math.lina.Elements.matrix", "link" : "math\/lina\/Elements.html#matrix:math.lina.Matrix[A]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[A]", "member" : "scala.collection.Seq.seq", "link" : "math\/lina\/Elements.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "math\/lina\/Elements.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "math\/lina\/Elements.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, Seq[A]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Elements.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, Seq[A]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Elements.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "math\/lina\/Elements.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "math\/lina\/Elements.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "math\/lina\/Elements.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): Seq[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "math\/lina\/Elements.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "math\/lina\/Elements.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "math\/lina\/Elements.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "math\/lina\/Elements.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "math\/lina\/Elements.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "math\/lina\/Elements.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "math\/lina\/Elements.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "math\/lina\/Elements.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "math\/lina\/Elements.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "math\/lina\/Elements.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[A]", "member" : "scala.collection.SeqLike.diff", "link" : "math\/lina\/Elements.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "math\/lina\/Elements.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "math\/lina\/Elements.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "math\/lina\/Elements.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Elements.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Elements.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Elements.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Elements.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "math\/lina\/Elements.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "math\/lina\/Elements.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "math\/lina\/Elements.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "math\/lina\/Elements.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.reverse", "link" : "math\/lina\/Elements.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "math\/lina\/Elements.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "math\/lina\/Elements.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "math\/lina\/Elements.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "math\/lina\/Elements.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "math\/lina\/Elements.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "math\/lina\/Elements.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "math\/lina\/Elements.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "math\/lina\/Elements.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "math\/lina\/Elements.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[A]): Seq[A]", "member" : "scala.collection.SeqLike.toCollection", "link" : "math\/lina\/Elements.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "math\/lina\/Elements.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "math\/lina\/Elements.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "math\/lina\/Elements.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "math\/lina\/Elements.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "math\/lina\/Elements.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Elements.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Elements.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Elements.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Elements.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "math\/lina\/Elements.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "math\/lina\/Elements.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "math\/lina\/Elements.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "math\/lina\/Elements.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "math\/lina\/Elements.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "math\/lina\/Elements.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[A], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "math\/lina\/Elements.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "math\/lina\/Elements.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "math\/lina\/Elements.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "math\/lina\/Elements.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.dropRight", "link" : "math\/lina\/Elements.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.takeRight", "link" : "math\/lina\/Elements.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Elements.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Elements.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "math\/lina\/Elements.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "math\/lina\/Elements.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.drop", "link" : "math\/lina\/Elements.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.take", "link" : "math\/lina\/Elements.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[A]", "member" : "scala.collection.IterableLike.slice", "link" : "math\/lina\/Elements.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IterableLike.head", "link" : "math\/lina\/Elements.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "math\/lina\/Elements.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "math\/lina\/Elements.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "math\/lina\/Elements.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "math\/lina\/Elements.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IterableLike.find", "link" : "math\/lina\/Elements.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "math\/lina\/Elements.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "math\/lina\/Elements.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "math\/lina\/Elements.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "math\/lina\/Elements.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "math\/lina\/Elements.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "math\/lina\/Elements.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "math\/lina\/Elements.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "math\/lina\/Elements.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, Seq[A]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "math\/lina\/Elements.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, Seq[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "math\/lina\/Elements.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "math\/lina\/Elements.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "math\/lina\/Elements.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "math\/lina\/Elements.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "math\/lina\/Elements.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "math\/lina\/Elements.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "math\/lina\/Elements.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.span", "link" : "math\/lina\/Elements.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "math\/lina\/Elements.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.init", "link" : "math\/lina\/Elements.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "math\/lina\/Elements.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.TraversableLike.last", "link" : "math\/lina\/Elements.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.tail", "link" : "math\/lina\/Elements.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "math\/lina\/Elements.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "math\/lina\/Elements.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "math\/lina\/Elements.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "math\/lina\/Elements.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, Seq[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "math\/lina\/Elements.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "math\/lina\/Elements.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "math\/lina\/Elements.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "math\/lina\/Elements.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "math\/lina\/Elements.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "math\/lina\/Elements.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "math\/lina\/Elements.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Elements.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Elements.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "math\/lina\/Elements.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "math\/lina\/Elements.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "math\/lina\/Elements.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "math\/lina\/Elements.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "math\/lina\/Elements.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "math\/lina\/Elements.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Elements.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Elements.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Elements.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Elements.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Elements.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Elements.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "math\/lina\/Elements.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "math\/lina\/Elements.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "math\/lina\/Elements.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "math\/lina\/Elements.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "math\/lina\/Elements.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.toList", "link" : "math\/lina\/Elements.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "math\/lina\/Elements.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Elements.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Elements.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "math\/lina\/Elements.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "math\/lina\/Elements.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "math\/lina\/Elements.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "math\/lina\/Elements.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "math\/lina\/Elements.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "math\/lina\/Elements.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "math\/lina\/Elements.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "math\/lina\/Elements.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "math\/lina\/Elements.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "math\/lina\/Elements.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "math\/lina\/Elements.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "math\/lina\/Elements.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "math\/lina\/Elements.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "math\/lina\/Elements.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "math\/lina\/Elements.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "math\/lina\/Elements.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "math\/lina\/Elements.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "math\/lina\/Elements.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "math\/lina\/Elements.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "math\/lina\/Elements.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "math\/lina\/Elements.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "math\/lina\/Elements.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "math\/lina\/Elements.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "math\/lina\/Elements.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "math\/lina\/Elements.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "math\/lina\/Elements.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "math\/lina\/Elements.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "math\/lina\/Elements.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/Elements.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/Elements.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/Elements.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/Elements.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/Elements.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/Elements.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/Elements.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Elements.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Elements.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Elements.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/Elements.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/Elements.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/Elements.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/Elements.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/Elements.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/Elements.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "math\/lina\/Elements.html", "kind" : "case class"}, {"name" : "math.lina.Matrix", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "math.lina.Matrix.toString", "link" : "math\/lina\/Matrix.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "math.lina.Matrix.hashCode", "link" : "math\/lina\/Matrix.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "math.lina.Matrix.equals", "link" : "math\/lina\/Matrix.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/Matrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/Matrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/Matrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/Matrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/Matrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/Matrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/Matrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Matrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Matrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Matrix.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/Matrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/Matrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/Matrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/Matrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/Matrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/Matrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(i: Int, j: Int): A", "member" : "math.lina.Matrix.apply", "link" : "math\/lina\/Matrix.html#apply(i:Int,j:Int):A", "kind" : "abstract def"}, {"label" : "columns", "tail" : "(): Int", "member" : "math.lina.Matrix.columns", "link" : "math\/lina\/Matrix.html#columns:Int", "kind" : "abstract def"}, {"label" : "rows", "tail" : "(): Int", "member" : "math.lina.Matrix.rows", "link" : "math\/lina\/Matrix.html#rows:Int", "kind" : "abstract def"}], "shortDescription" : "Subclasses must implement at least rows", "object" : "math\/lina\/Matrix$.html", "members_object" : [{"label" : "apply", "tail" : "(jsonStr: String): Matrix[Double]", "member" : "math.lina.Matrix.apply", "link" : "math\/lina\/Matrix$.html#apply(jsonStr:String):math.lina.Matrix[Double]", "kind" : "def"}, {"label" : "parseDouble", "tail" : "(json: Json): Double", "member" : "math.lina.Matrix.parseDouble", "link" : "math\/lina\/Matrix$.html#parseDouble(json:io.Json):Double", "kind" : "def"}, {"label" : "apply", "tail" : "(json: Json, parse: (Json) ⇒ A): Try[Matrix[A]]", "member" : "math.lina.Matrix.apply", "link" : "math\/lina\/Matrix$.html#apply[A](json:io.Json,parse:io.Json=>A):scala.util.Try[math.lina.Matrix[A]]", "kind" : "def"}, {"label" : "VecOfRowVecs", "tail" : "", "member" : "math.lina.Matrix.VecOfRowVecs", "link" : "math\/lina\/Matrix$.html#VecOfRowVecs[A]extendsMatrix[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/Matrix$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/Matrix$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/Matrix$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/Matrix$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/Matrix$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/Matrix$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/Matrix$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Matrix$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Matrix$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Matrix$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/Matrix$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/Matrix$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/lina\/Matrix$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/Matrix$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/lina\/Matrix$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/lina\/Matrix$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/Matrix$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/Matrix$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/Matrix$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "math\/lina\/Matrix.html", "kind" : "trait"}, {"name" : "math.lina.MatrixMath", "shortDescription" : "MatrixOps that require  you can calculate with the entriesvia a Field[A]", "members_class" : [{"label" : "*", "tail" : "(other: Matrix[A]): Matrix[A]", "member" : "math.lina.MatrixMath.*", "link" : "math\/lina\/package$$MatrixMath.html#*(other:math.lina.Matrix[A]):math.lina.Matrix[A]", "kind" : "def"}, {"label" : "*", "tail" : "(x: A): Matrix[A]", "member" : "math.lina.MatrixMath.*", "link" : "math\/lina\/package$$MatrixMath.html#*(x:A):math.lina.Matrix[A]", "kind" : "def"}, {"label" : "+", "tail" : "(other: Matrix[A]): Matrix[A]", "member" : "math.lina.MatrixMath.+", "link" : "math\/lina\/package$$MatrixMath.html#+(other:math.lina.Matrix[A]):math.lina.Matrix[A]", "kind" : "def"}, {"label" : "algebra", "tail" : ": Field[A]", "member" : "math.lina.MatrixMath.algebra", "link" : "math\/lina\/package$$MatrixMath.html#algebra:math.algebra.Field[A]", "kind" : "val"}, {"member" : "math.lina.MatrixMath#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/package$$MatrixMath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/package$$MatrixMath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/package$$MatrixMath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/package$$MatrixMath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/package$$MatrixMath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/package$$MatrixMath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/package$$MatrixMath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$MatrixMath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$MatrixMath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$MatrixMath.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/package$$MatrixMath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/package$$MatrixMath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/lina\/package$$MatrixMath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/package$$MatrixMath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/lina\/package$$MatrixMath.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/lina\/package$$MatrixMath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/package$$MatrixMath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/package$$MatrixMath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/package$$MatrixMath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "math\/lina\/package$$MatrixMath.html", "kind" : "class"}, {"name" : "math.lina.MatrixOps", "shortDescription" : "Matrix utility methods such as map.", "members_class" : [{"label" : "aligned", "tail" : "(other: Matrix[B]): Boolean", "member" : "math.lina.MatrixOps.aligned", "link" : "math\/lina\/package$$MatrixOps.html#aligned[B](other:math.lina.Matrix[B]):Boolean", "kind" : "def"}, {"label" : "transpose", "tail" : "(): Matrix[A]", "member" : "math.lina.MatrixOps.transpose", "link" : "math\/lina\/package$$MatrixOps.html#transpose:math.lina.Matrix[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Matrix[B]", "member" : "math.lina.MatrixOps.map", "link" : "math\/lina\/package$$MatrixOps.html#map[B](f:A=>B):math.lina.Matrix[B]", "kind" : "def"}, {"label" : "elements", "tail" : "(): Elements[A]", "member" : "math.lina.MatrixOps.elements", "link" : "math\/lina\/package$$MatrixOps.html#elements:math.lina.Elements[A]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Matrix[B]): Matrix[(A, B)]", "member" : "math.lina.MatrixOps.zip", "link" : "math\/lina\/package$$MatrixOps.html#zip[B](other:math.lina.Matrix[B]):math.lina.Matrix[(A,B)]", "kind" : "def"}, {"member" : "math.lina.MatrixOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/package$$MatrixOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/package$$MatrixOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/package$$MatrixOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/package$$MatrixOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/package$$MatrixOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/package$$MatrixOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/package$$MatrixOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$MatrixOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$MatrixOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$MatrixOps.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/package$$MatrixOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/package$$MatrixOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/lina\/package$$MatrixOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/package$$MatrixOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/lina\/package$$MatrixOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/lina\/package$$MatrixOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/package$$MatrixOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/package$$MatrixOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/package$$MatrixOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "math\/lina\/package$$MatrixOps.html", "kind" : "class"}, {"name" : "math.lina.Row", "shortDescription" : "", "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "math\/lina\/Row.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "math.lina.Row.iterator", "link" : "math\/lina\/Row.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(j: Int): A", "member" : "math.lina.Row.apply", "link" : "math\/lina\/Row.html#apply(j:Int):A", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "math.lina.Row.length", "link" : "math\/lina\/Row.html#length:Int", "kind" : "def"}, {"member" : "math.lina.Row#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Int", "member" : "math.lina.Row.index", "link" : "math\/lina\/Row.html#index:Int", "kind" : "val"}, {"label" : "matrix", "tail" : ": Matrix[A]", "member" : "math.lina.Row.matrix", "link" : "math\/lina\/Row.html#matrix:math.lina.Matrix[A]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[A]", "member" : "scala.collection.Seq.seq", "link" : "math\/lina\/Row.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "math\/lina\/Row.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "math\/lina\/Row.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, Seq[A]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Row.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, Seq[A]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Row.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "math\/lina\/Row.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "math\/lina\/Row.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "math\/lina\/Row.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): Seq[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "math\/lina\/Row.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "math\/lina\/Row.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "math\/lina\/Row.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "math\/lina\/Row.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "math\/lina\/Row.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "math\/lina\/Row.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "math\/lina\/Row.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "math\/lina\/Row.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "math\/lina\/Row.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "math\/lina\/Row.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[A]", "member" : "scala.collection.SeqLike.diff", "link" : "math\/lina\/Row.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "math\/lina\/Row.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "math\/lina\/Row.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "math\/lina\/Row.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Row.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Row.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Row.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Row.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "math\/lina\/Row.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "math\/lina\/Row.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "math\/lina\/Row.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "math\/lina\/Row.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.reverse", "link" : "math\/lina\/Row.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "math\/lina\/Row.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "math\/lina\/Row.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "math\/lina\/Row.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "math\/lina\/Row.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "math\/lina\/Row.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "math\/lina\/Row.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "math\/lina\/Row.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "math\/lina\/Row.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "math\/lina\/Row.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[A]): Seq[A]", "member" : "scala.collection.SeqLike.toCollection", "link" : "math\/lina\/Row.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "math\/lina\/Row.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "math\/lina\/Row.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "math\/lina\/Row.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "math\/lina\/Row.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "math\/lina\/Row.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Row.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Row.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Row.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Row.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "math\/lina\/Row.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "math\/lina\/Row.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "math\/lina\/Row.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "math\/lina\/Row.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "math\/lina\/Row.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "math\/lina\/Row.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[A], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "math\/lina\/Row.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "math\/lina\/Row.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "math\/lina\/Row.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "math\/lina\/Row.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.dropRight", "link" : "math\/lina\/Row.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.takeRight", "link" : "math\/lina\/Row.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Row.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Row.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "math\/lina\/Row.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "math\/lina\/Row.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.drop", "link" : "math\/lina\/Row.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[A]", "member" : "scala.collection.IterableLike.take", "link" : "math\/lina\/Row.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[A]", "member" : "scala.collection.IterableLike.slice", "link" : "math\/lina\/Row.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IterableLike.head", "link" : "math\/lina\/Row.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "math\/lina\/Row.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "math\/lina\/Row.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "math\/lina\/Row.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "math\/lina\/Row.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IterableLike.find", "link" : "math\/lina\/Row.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "math\/lina\/Row.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "math\/lina\/Row.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "math\/lina\/Row.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "math\/lina\/Row.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "math\/lina\/Row.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "math\/lina\/Row.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "math\/lina\/Row.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "math\/lina\/Row.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, Seq[A]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "math\/lina\/Row.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, Seq[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "math\/lina\/Row.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "math\/lina\/Row.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "math\/lina\/Row.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "math\/lina\/Row.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "math\/lina\/Row.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "math\/lina\/Row.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "math\/lina\/Row.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.span", "link" : "math\/lina\/Row.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "math\/lina\/Row.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.init", "link" : "math\/lina\/Row.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "math\/lina\/Row.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.TraversableLike.last", "link" : "math\/lina\/Row.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.tail", "link" : "math\/lina\/Row.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "math\/lina\/Row.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "math\/lina\/Row.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "math\/lina\/Row.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "math\/lina\/Row.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, Seq[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "math\/lina\/Row.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (Seq[A], Seq[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "math\/lina\/Row.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "math\/lina\/Row.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "math\/lina\/Row.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): Seq[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "math\/lina\/Row.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "math\/lina\/Row.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "math\/lina\/Row.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Row.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Row.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "math\/lina\/Row.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "math\/lina\/Row.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "math\/lina\/Row.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "math\/lina\/Row.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "math\/lina\/Row.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "math\/lina\/Row.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Row.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Row.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Row.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Row.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Row.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Row.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "math\/lina\/Row.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "math\/lina\/Row.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "math\/lina\/Row.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "math\/lina\/Row.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "math\/lina\/Row.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.toList", "link" : "math\/lina\/Row.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "math\/lina\/Row.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Row.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Row.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "math\/lina\/Row.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "math\/lina\/Row.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "math\/lina\/Row.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "math\/lina\/Row.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "math\/lina\/Row.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "math\/lina\/Row.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "math\/lina\/Row.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "math\/lina\/Row.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "math\/lina\/Row.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "math\/lina\/Row.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "math\/lina\/Row.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "math\/lina\/Row.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "math\/lina\/Row.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "math\/lina\/Row.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "math\/lina\/Row.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "math\/lina\/Row.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "math\/lina\/Row.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "math\/lina\/Row.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "math\/lina\/Row.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "math\/lina\/Row.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "math\/lina\/Row.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "math\/lina\/Row.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "math\/lina\/Row.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "math\/lina\/Row.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "math\/lina\/Row.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "math\/lina\/Row.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "math\/lina\/Row.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "math\/lina\/Row.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/Row.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/Row.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/Row.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/Row.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/Row.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/Row.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/Row.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Row.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Row.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Row.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/Row.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/Row.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/Row.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/Row.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/Row.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/Row.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "math\/lina\/Row.html", "kind" : "case class"}, {"name" : "math.lina.Rows", "shortDescription" : "", "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "math\/lina\/Rows.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[Row[A]]", "member" : "math.lina.Rows.iterator", "link" : "math\/lina\/Rows.html#iterator:Iterator[math.lina.Row[A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Row[A]", "member" : "math.lina.Rows.apply", "link" : "math\/lina\/Rows.html#apply(i:Int):math.lina.Row[A]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "math.lina.Rows.length", "link" : "math\/lina\/Rows.html#length:Int", "kind" : "def"}, {"member" : "math.lina.Rows#<init>", "error" : "unsupported entity"}, {"label" : "matrix", "tail" : ": Matrix[A]", "member" : "math.lina.Rows.matrix", "link" : "math\/lina\/Rows.html#matrix:math.lina.Matrix[A]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.Seq.seq", "link" : "math\/lina\/Rows.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "math\/lina\/Rows.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "math\/lina\/Rows.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Row[A], Seq[Row[A]]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Rows.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Row[A], Seq[Row[A]]]", "member" : "scala.collection.SeqLike.view", "link" : "math\/lina\/Rows.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "math\/lina\/Rows.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.SeqLike.toSeq", "link" : "math\/lina\/Rows.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Row[A]]", "member" : "scala.collection.SeqLike.sorted", "link" : "math\/lina\/Rows.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Row[A]) ⇒ B)(ord: Ordering[B]): Seq[Row[A]]", "member" : "scala.collection.SeqLike.sortBy", "link" : "math\/lina\/Rows.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Row[A], Row[A]) ⇒ Boolean): Seq[Row[A]]", "member" : "scala.collection.SeqLike.sortWith", "link" : "math\/lina\/Rows.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Row[A], B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "math\/lina\/Rows.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "math\/lina\/Rows.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "math\/lina\/Rows.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "math\/lina\/Rows.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "math\/lina\/Rows.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "math\/lina\/Rows.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.SeqLike.distinct", "link" : "math\/lina\/Rows.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[Row[A]]", "member" : "scala.collection.SeqLike.intersect", "link" : "math\/lina\/Rows.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[Row[A]]", "member" : "scala.collection.SeqLike.diff", "link" : "math\/lina\/Rows.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "math\/lina\/Rows.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "math\/lina\/Rows.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "math\/lina\/Rows.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Rows.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "math\/lina\/Rows.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Rows.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "math\/lina\/Rows.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "math\/lina\/Rows.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "math\/lina\/Rows.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Row[A]]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "math\/lina\/Rows.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Row[A]) ⇒ B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "math\/lina\/Rows.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.SeqLike.reverse", "link" : "math\/lina\/Rows.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Row[A]]]", "member" : "scala.collection.SeqLike.combinations", "link" : "math\/lina\/Rows.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Row[A]]]", "member" : "scala.collection.SeqLike.permutations", "link" : "math\/lina\/Rows.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Row[A]) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "math\/lina\/Rows.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Row[A]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "math\/lina\/Rows.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Row[A]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "math\/lina\/Rows.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "math\/lina\/Rows.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "math\/lina\/Rows.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "math\/lina\/Rows.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Row[A], ParSeq[Row[A]]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "math\/lina\/Rows.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[Row[A]]): Seq[Row[A]]", "member" : "scala.collection.SeqLike.toCollection", "link" : "math\/lina\/Rows.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "math\/lina\/Rows.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "math\/lina\/Rows.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "math\/lina\/Rows.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "math\/lina\/Rows.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Row[A]) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "math\/lina\/Rows.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Rows.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "math\/lina\/Rows.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Rows.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "math\/lina\/Rows.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Row[A]) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "math\/lina\/Rows.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Row[A]) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "math\/lina\/Rows.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "math\/lina\/Rows.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "math\/lina\/Rows.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Row[A]]", "member" : "scala.collection.IterableLike.toStream", "link" : "math\/lina\/Rows.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "math\/lina\/Rows.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[Row[A]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "math\/lina\/Rows.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[Row[A]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "math\/lina\/Rows.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[Row[A]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "math\/lina\/Rows.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "math\/lina\/Rows.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Row[A]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "math\/lina\/Rows.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Row[A]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "math\/lina\/Rows.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Row[A]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Rows.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Row[A]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "math\/lina\/Rows.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Row[A]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "math\/lina\/Rows.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Row[A]) ⇒ Boolean): Seq[Row[A]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "math\/lina\/Rows.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Row[A]]", "member" : "scala.collection.IterableLike.drop", "link" : "math\/lina\/Rows.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Row[A]]", "member" : "scala.collection.IterableLike.take", "link" : "math\/lina\/Rows.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Row[A]]", "member" : "scala.collection.IterableLike.slice", "link" : "math\/lina\/Rows.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Row[A]", "member" : "scala.collection.IterableLike.head", "link" : "math\/lina\/Rows.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Row[A]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "math\/lina\/Rows.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Row[A]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "math\/lina\/Rows.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Row[A], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "math\/lina\/Rows.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Row[A], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "math\/lina\/Rows.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Row[A]) ⇒ Boolean): Option[Row[A]]", "member" : "scala.collection.IterableLike.find", "link" : "math\/lina\/Rows.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Row[A]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "math\/lina\/Rows.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Row[A]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "math\/lina\/Rows.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Row[A]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "math\/lina\/Rows.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Row[A]) ⇒ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "math\/lina\/Rows.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Row[A]) ⇒ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "math\/lina\/Rows.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Row[A]) ⇒ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "math\/lina\/Rows.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Row[A]) ⇒ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "math\/lina\/Rows.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "math\/lina\/Rows.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Row[A], Seq[Row[A]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "math\/lina\/Rows.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Row[A]) ⇒ Boolean): FilterMonadic[Row[A], Seq[Row[A]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "math\/lina\/Rows.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "math\/lina\/Rows.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Row[A], Col[Row[A]]]): Col[Row[A]]", "member" : "scala.collection.TraversableLike.to", "link" : "math\/lina\/Rows.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Row[A]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "math\/lina\/Rows.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Row[A]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "math\/lina\/Rows.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Row[A]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "math\/lina\/Rows.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Row[A]], Seq[Row[A]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "math\/lina\/Rows.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Row[A]) ⇒ Boolean): (Seq[Row[A]], Seq[Row[A]])", "member" : "scala.collection.TraversableLike.span", "link" : "math\/lina\/Rows.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Row[A]) ⇒ Boolean): Seq[Row[A]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "math\/lina\/Rows.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.TraversableLike.init", "link" : "math\/lina\/Rows.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Row[A]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "math\/lina\/Rows.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Row[A]", "member" : "scala.collection.TraversableLike.last", "link" : "math\/lina\/Rows.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.TraversableLike.tail", "link" : "math\/lina\/Rows.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Row[A]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "math\/lina\/Rows.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Row[A], B) ⇒ B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "math\/lina\/Rows.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Row[A]) ⇒ B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "math\/lina\/Rows.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "math\/lina\/Rows.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Row[A]) ⇒ K): Map[K, Seq[Row[A]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "math\/lina\/Rows.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Row[A]) ⇒ Boolean): (Seq[Row[A]], Seq[Row[A]])", "member" : "scala.collection.TraversableLike.partition", "link" : "math\/lina\/Rows.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Row[A], B])(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "math\/lina\/Rows.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Row[A]) ⇒ Boolean): Seq[Row[A]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "math\/lina\/Rows.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Row[A]) ⇒ Boolean): Seq[Row[A]]", "member" : "scala.collection.TraversableLike.filter", "link" : "math\/lina\/Rows.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Row[A]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "math\/lina\/Rows.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Row[A]) ⇒ B)(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "math\/lina\/Rows.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Rows.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/lina\/Rows.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Row[A]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "math\/lina\/Rows.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "math\/lina\/Rows.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "math\/lina\/Rows.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[Row[A]]", "member" : "scala.collection.TraversableLike.repr", "link" : "math\/lina\/Rows.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "math\/lina\/Rows.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Row[A]]", "member" : "scala.collection.Parallelizable.par", "link" : "math\/lina\/Rows.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Rows.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Rows.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/lina\/Rows.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Rows.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Rows.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/lina\/Rows.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Row[A], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "math\/lina\/Rows.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Row[A]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "math\/lina\/Rows.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "math\/lina\/Rows.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "math\/lina\/Rows.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Row[A]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "math\/lina\/Rows.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Row[A]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "math\/lina\/Rows.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "math\/lina\/Rows.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Rows.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/lina\/Rows.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "math\/lina\/Rows.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Row[A]) ⇒ B)(cmp: Ordering[B]): Row[A]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "math\/lina\/Rows.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Row[A]) ⇒ B)(cmp: Ordering[B]): Row[A]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "math\/lina\/Rows.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Row[A]", "member" : "scala.collection.TraversableOnce.max", "link" : "math\/lina\/Rows.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Row[A]", "member" : "scala.collection.TraversableOnce.min", "link" : "math\/lina\/Rows.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "math\/lina\/Rows.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "math\/lina\/Rows.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Row[A]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "math\/lina\/Rows.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "math\/lina\/Rows.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "math\/lina\/Rows.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "math\/lina\/Rows.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Row[A], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "math\/lina\/Rows.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Row[A]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "math\/lina\/Rows.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Row[A]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "math\/lina\/Rows.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Row[A]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "math\/lina\/Rows.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Row[A], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "math\/lina\/Rows.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Row[A]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "math\/lina\/Rows.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Row[A], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "math\/lina\/Rows.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Row[A]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "math\/lina\/Rows.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "math\/lina\/Rows.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Row[A]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "math\/lina\/Rows.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "math\/lina\/Rows.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Row[A]) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "math\/lina\/Rows.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "math\/lina\/Rows.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[Row[A]]", "member" : "scala.PartialFunction.lift", "link" : "math\/lina\/Rows.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Row[A]) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "math\/lina\/Rows.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "math\/lina\/Rows.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ Row[A]", "member" : "scala.Function1.compose", "link" : "math\/lina\/Rows.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/Rows.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/Rows.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/Rows.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/Rows.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/Rows.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/Rows.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/Rows.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Rows.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Rows.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/Rows.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/Rows.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/Rows.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/Rows.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/Rows.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/Rows.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/Rows.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "math\/lina\/Rows.html", "kind" : "case class"}, {"name" : "math.lina.SequenceMath", "shortDescription" : "", "members_class" : [{"label" : "*", "tail" : "(w: Seq[A]): Seq[A]", "member" : "math.lina.SequenceMath.*", "link" : "math\/lina\/package$$SequenceMath.html#*(w:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "+", "tail" : "(x: A): Seq[A]", "member" : "math.lina.SequenceMath.+", "link" : "math\/lina\/package$$SequenceMath.html#+(x:A):Seq[A]", "kind" : "def"}, {"label" : "-", "tail" : "(other: Seq[A]): Seq[A]", "member" : "math.lina.SequenceMath.-", "link" : "math\/lina\/package$$SequenceMath.html#-(other:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "+", "tail" : "(other: Seq[A]): Seq[A]", "member" : "math.lina.SequenceMath.+", "link" : "math\/lina\/package$$SequenceMath.html#+(other:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "dot", "tail" : "(other: Seq[A]): A", "member" : "math.lina.SequenceMath.dot", "link" : "math\/lina\/package$$SequenceMath.html#dot(other:Seq[A]):A", "kind" : "def"}, {"label" : "total", "tail" : "(): A", "member" : "math.lina.SequenceMath.total", "link" : "math\/lina\/package$$SequenceMath.html#total:A", "kind" : "def"}, {"label" : "algebra", "tail" : ": Field[A]", "member" : "math.lina.SequenceMath.algebra", "link" : "math\/lina\/package$$SequenceMath.html#algebra:math.algebra.Field[A]", "kind" : "val"}, {"member" : "math.lina.SequenceMath#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/package$$SequenceMath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/package$$SequenceMath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/package$$SequenceMath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/package$$SequenceMath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/package$$SequenceMath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/package$$SequenceMath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/package$$SequenceMath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$SequenceMath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$SequenceMath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$SequenceMath.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/package$$SequenceMath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/package$$SequenceMath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/lina\/package$$SequenceMath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/package$$SequenceMath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/lina\/package$$SequenceMath.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/lina\/package$$SequenceMath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/package$$SequenceMath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/package$$SequenceMath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/package$$SequenceMath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "math\/lina\/package$$SequenceMath.html", "kind" : "class"}, {"name" : "math.lina.SequenceOps", "shortDescription" : "", "members_class" : [{"label" : "format", "tail" : "(ipol: String, start: String, end: String): String", "member" : "math.lina.SequenceOps.format", "link" : "math\/lina\/package$$SequenceOps.html#format(ipol:String,start:String,end:String):String", "kind" : "def"}, {"label" : "locale", "tail" : ": Locale", "member" : "math.lina.SequenceOps.locale", "link" : "math\/lina\/package$$SequenceOps.html#locale:java.util.Locale", "kind" : "val"}, {"label" : "randomSlices", "tail" : "(size: Int): TraversableOnce[Seq[A]]", "member" : "math.lina.SequenceOps.randomSlices", "link" : "math\/lina\/package$$SequenceOps.html#randomSlices(size:Int):TraversableOnce[Seq[A]]", "kind" : "def"}, {"label" : "columnize", "tail" : "(cols: Int): Matrix[A]", "member" : "math.lina.SequenceOps.columnize", "link" : "math\/lina\/package$$SequenceOps.html#columnize(cols:Int):math.lina.Matrix[A]", "kind" : "def"}, {"member" : "math.lina.SequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/lina\/package$$SequenceOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/lina\/package$$SequenceOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/lina\/package$$SequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/lina\/package$$SequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/lina\/package$$SequenceOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/lina\/package$$SequenceOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/lina\/package$$SequenceOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$SequenceOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$SequenceOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/lina\/package$$SequenceOps.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/lina\/package$$SequenceOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/lina\/package$$SequenceOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/lina\/package$$SequenceOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/lina\/package$$SequenceOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/lina\/package$$SequenceOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/lina\/package$$SequenceOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/lina\/package$$SequenceOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/lina\/package$$SequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/lina\/package$$SequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "math\/lina\/package$$SequenceOps.html", "kind" : "class"}], "math" : [], "math.ana" : [{"name" : "math.ana.Function1Math", "shortDescription" : "", "members_class" : [{"label" : "wrap", "tail" : "(outer: (Y) ⇒ Y): (X) ⇒ Y", "member" : "math.ana.Function1Math.wrap", "link" : "math\/ana\/package$$Function1Math.html#wrap(outer:Y=>Y):X=>Y", "kind" : "def"}, {"label" : "negate", "tail" : "(): (X) ⇒ Y", "member" : "math.ana.Function1Math.negate", "link" : "math\/ana\/package$$Function1Math.html#negate:X=>Y", "kind" : "def"}, {"label" : "algebra", "tail" : ": Field[Y]", "member" : "math.ana.Function1Math.algebra", "link" : "math\/ana\/package$$Function1Math.html#algebra:math.algebra.Field[Y]", "kind" : "val"}, {"member" : "math.ana.Function1Math#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/ana\/package$$Function1Math.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/ana\/package$$Function1Math.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/ana\/package$$Function1Math.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/ana\/package$$Function1Math.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/ana\/package$$Function1Math.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/ana\/package$$Function1Math.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/ana\/package$$Function1Math.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/package$$Function1Math.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/package$$Function1Math.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/package$$Function1Math.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/ana\/package$$Function1Math.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/ana\/package$$Function1Math.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/ana\/package$$Function1Math.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/ana\/package$$Function1Math.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/ana\/package$$Function1Math.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/ana\/package$$Function1Math.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/ana\/package$$Function1Math.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/ana\/package$$Function1Math.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/ana\/package$$Function1Math.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "math\/ana\/package$$Function1Math.html", "kind" : "class"}, {"name" : "math.ana.Function2Math", "shortDescription" : "", "members_class" : [{"label" : "negate", "tail" : "(): (X, Z) ⇒ Y", "member" : "math.ana.Function2Math.negate", "link" : "math\/ana\/package$$Function2Math.html#negate:(X,Z)=>Y", "kind" : "def"}, {"label" : "algebra", "tail" : ": Field[Y]", "member" : "math.ana.Function2Math.algebra", "link" : "math\/ana\/package$$Function2Math.html#algebra:math.algebra.Field[Y]", "kind" : "val"}, {"member" : "math.ana.Function2Math#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/ana\/package$$Function2Math.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/ana\/package$$Function2Math.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/ana\/package$$Function2Math.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/ana\/package$$Function2Math.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/ana\/package$$Function2Math.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/ana\/package$$Function2Math.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/ana\/package$$Function2Math.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/package$$Function2Math.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/package$$Function2Math.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/package$$Function2Math.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/ana\/package$$Function2Math.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/ana\/package$$Function2Math.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/ana\/package$$Function2Math.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/ana\/package$$Function2Math.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/ana\/package$$Function2Math.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/ana\/package$$Function2Math.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/ana\/package$$Function2Math.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/ana\/package$$Function2Math.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/ana\/package$$Function2Math.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "math\/ana\/package$$Function2Math.html", "kind" : "class"}, {"name" : "math.ana.Gradient", "shortDescription" : "Gradient of real-valued functionEstimated via difference quotient unless provided analytically", "object" : "math\/ana\/Gradient$.html", "members_class" : [{"label" : "negate", "tail" : "(): Gradient", "member" : "math.ana.Gradient.negate", "link" : "math\/ana\/Gradient.html#negate:math.ana.Gradient", "kind" : "def"}, {"label" : "apply", "tail" : "(v: Vec, i: Int): Double", "member" : "math.ana.Gradient.apply", "link" : "math\/ana\/Gradient.html#apply(v:math.lina.Vec,i:Int):Double", "kind" : "def"}, {"label" : "apply", "tail" : "(v: Vec): Vec", "member" : "math.ana.Gradient.apply", "link" : "math\/ana\/Gradient.html#apply(v:math.lina.Vec):math.lina.Vec", "kind" : "def"}, {"member" : "math.ana.Gradient#<init>", "error" : "unsupported entity"}, {"label" : "h", "tail" : ": Double", "member" : "math.ana.Gradient.h", "link" : "math\/ana\/Gradient.html#h:Double", "kind" : "val"}, {"label" : "derivatives", "tail" : ": Option[(Vec, Int) ⇒ Double]", "member" : "math.ana.Gradient.derivatives", "link" : "math\/ana\/Gradient.html#derivatives:Option[(math.lina.Vec,Int)=>Double]", "kind" : "val"}, {"label" : "func", "tail" : ": (Vec) ⇒ Double", "member" : "math.ana.Gradient.func", "link" : "math\/ana\/Gradient.html#func:math.lina.Vec=>Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/ana\/Gradient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/ana\/Gradient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/ana\/Gradient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/ana\/Gradient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/ana\/Gradient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/ana\/Gradient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/ana\/Gradient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/Gradient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/Gradient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/Gradient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/ana\/Gradient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/ana\/Gradient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/ana\/Gradient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/ana\/Gradient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/ana\/Gradient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/ana\/Gradient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/ana\/Gradient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/ana\/Gradient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/ana\/Gradient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(f: (Vec) ⇒ Double): Gradient", "member" : "math.ana.Gradient.apply", "link" : "math\/ana\/Gradient$.html#apply(f:math.lina.Vec=>Double):math.ana.Gradient", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Vec) ⇒ Double, g: (Vec, Int) ⇒ Double): Gradient", "member" : "math.ana.Gradient.apply", "link" : "math\/ana\/Gradient$.html#apply(f:math.lina.Vec=>Double,g:(math.lina.Vec,Int)=>Double):math.ana.Gradient", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/ana\/Gradient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/ana\/Gradient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/ana\/Gradient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/ana\/Gradient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/ana\/Gradient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/ana\/Gradient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/ana\/Gradient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/Gradient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/Gradient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/Gradient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/ana\/Gradient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/ana\/Gradient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/ana\/Gradient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/ana\/Gradient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/ana\/Gradient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/ana\/Gradient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/ana\/Gradient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/ana\/Gradient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/ana\/Gradient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "math\/ana\/Gradient.html", "kind" : "class"}, {"name" : "math.ana.GradientDescent", "shortDescription" : "Gradient descent algorithms as a scala.collection.Traversable of its steps(most recent step last)", "object" : "math\/ana\/GradientDescent$.html", "members_object" : [{"label" : "Stop", "tail" : "", "member" : "math.ana.GradientDescent.Stop", "link" : "math\/ana\/GradientDescent$.html#Stopextends(math.ana.GradientDescent,math.lina.Vec)=>Boolean", "kind" : "class"}, {"label" : "Grid", "tail" : "", "member" : "math.ana.GradientDescent.Grid", "link" : "math\/ana\/GradientDescent$.html#GridextendsGradientDescent.StepswithProductwithSerializable", "kind" : "case class"}, {"label" : "Steps", "tail" : "", "member" : "math.ana.GradientDescent.Steps", "link" : "math\/ana\/GradientDescent$.html#Stepsextendsmath.ana.GradientDescent=>Seq[Double]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/ana\/GradientDescent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/ana\/GradientDescent$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/ana\/GradientDescent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/ana\/GradientDescent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/ana\/GradientDescent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/ana\/GradientDescent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/ana\/GradientDescent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/GradientDescent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/GradientDescent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/GradientDescent$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/ana\/GradientDescent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/ana\/GradientDescent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "math\/ana\/GradientDescent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/ana\/GradientDescent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "math\/ana\/GradientDescent$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "math\/ana\/GradientDescent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/ana\/GradientDescent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/ana\/GradientDescent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/ana\/GradientDescent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "math\/ana\/GradientDescent.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "foreach", "tail" : "(f: (GradientDescent) ⇒ U): Unit", "member" : "math.ana.GradientDescent.foreach", "link" : "math\/ana\/GradientDescent.html#foreach[U](f:math.ana.GradientDescent=>U):Unit", "kind" : "def"}, {"label" : "maximize", "tail" : "(): GradientDescent", "member" : "math.ana.GradientDescent.maximize", "link" : "math\/ana\/GradientDescent.html#maximize:math.ana.GradientDescent", "kind" : "def"}, {"label" : "minimize", "tail" : "(): GradientDescent", "member" : "math.ana.GradientDescent.minimize", "link" : "math\/ana\/GradientDescent.html#minimize:math.ana.GradientDescent", "kind" : "final def"}, {"label" : "value", "tail" : "(): Double", "member" : "math.ana.GradientDescent.value", "link" : "math\/ana\/GradientDescent.html#value:Double", "kind" : "def"}, {"member" : "math.ana.GradientDescent#<init>", "error" : "unsupported entity"}, {"label" : "previous", "tail" : ": Option[GradientDescent]", "member" : "math.ana.GradientDescent.previous", "link" : "math\/ana\/GradientDescent.html#previous:Option[math.ana.GradientDescent]", "kind" : "val"}, {"label" : "stop", "tail" : ": Stop", "member" : "math.ana.GradientDescent.stop", "link" : "math\/ana\/GradientDescent.html#stop:math.ana.GradientDescent.Stop", "kind" : "val"}, {"label" : "steps", "tail" : ": Steps", "member" : "math.ana.GradientDescent.steps", "link" : "math\/ana\/GradientDescent.html#steps:math.ana.GradientDescent.Steps", "kind" : "val"}, {"label" : "position", "tail" : ": Vec", "member" : "math.ana.GradientDescent.position", "link" : "math\/ana\/GradientDescent.html#position:math.lina.Vec", "kind" : "val"}, {"label" : "gradient", "tail" : ": Gradient", "member" : "math.ana.GradientDescent.gradient", "link" : "math\/ana\/GradientDescent.html#gradient:math.ana.Gradient", "kind" : "val"}, {"label" : "seq", "tail" : "(): Traversable[GradientDescent]", "member" : "scala.collection.Traversable.seq", "link" : "math\/ana\/GradientDescent.html#seq:Traversable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Traversable]", "member" : "scala.collection.Traversable.companion", "link" : "math\/ana\/GradientDescent.html#companion:scala.collection.generic.GenericCompanion[Traversable]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (GradientDescent) ⇒ GenTraversableOnce[B]): Traversable[Traversable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "math\/ana\/GradientDescent.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (GradientDescent) ⇒ GenTraversableOnce[B]): Traversable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "math\/ana\/GradientDescent.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (GradientDescent) ⇒ (A1, A2, A3)): (Traversable[A1], Traversable[A2], Traversable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "math\/ana\/GradientDescent.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (GradientDescent) ⇒ (A1, A2)): (Traversable[A1], Traversable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "math\/ana\/GradientDescent.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Traversable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "math\/ana\/GradientDescent.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[GradientDescent, Traversable[GradientDescent]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "math\/ana\/GradientDescent.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (GradientDescent) ⇒ Boolean): FilterMonadic[GradientDescent, Traversable[GradientDescent]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "math\/ana\/GradientDescent.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): TraversableView[GradientDescent, Traversable[GradientDescent]]", "member" : "scala.collection.TraversableLike.view", "link" : "math\/ana\/GradientDescent.html#view(from:Int,until:Int):scala.collection.TraversableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): TraversableView[GradientDescent, Traversable[GradientDescent]]", "member" : "scala.collection.TraversableLike.view", "link" : "math\/ana\/GradientDescent.html#view:scala.collection.TraversableView[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "math\/ana\/GradientDescent.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "math\/ana\/GradientDescent.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, GradientDescent, Col[GradientDescent]]): Col[GradientDescent]", "member" : "scala.collection.TraversableLike.to", "link" : "math\/ana\/GradientDescent.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[GradientDescent]", "member" : "scala.collection.TraversableLike.toStream", "link" : "math\/ana\/GradientDescent.html#toStream:Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[GradientDescent]", "member" : "scala.collection.TraversableLike.toIterator", "link" : "math\/ana\/GradientDescent.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "math\/ana\/GradientDescent.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.TraversableLike.copyToArray", "link" : "math\/ana\/GradientDescent.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Traversable[GradientDescent]]", "member" : "scala.collection.TraversableLike.inits", "link" : "math\/ana\/GradientDescent.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Traversable[GradientDescent]]", "member" : "scala.collection.TraversableLike.tails", "link" : "math\/ana\/GradientDescent.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Traversable[GradientDescent], Traversable[GradientDescent])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "math\/ana\/GradientDescent.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (GradientDescent) ⇒ Boolean): (Traversable[GradientDescent], Traversable[GradientDescent])", "member" : "scala.collection.TraversableLike.span", "link" : "math\/ana\/GradientDescent.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (GradientDescent) ⇒ Boolean): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "math\/ana\/GradientDescent.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (GradientDescent) ⇒ Boolean): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.takeWhile", "link" : "math\/ana\/GradientDescent.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.slice", "link" : "math\/ana\/GradientDescent.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.drop", "link" : "math\/ana\/GradientDescent.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.take", "link" : "math\/ana\/GradientDescent.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.init", "link" : "math\/ana\/GradientDescent.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[GradientDescent]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "math\/ana\/GradientDescent.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): GradientDescent", "member" : "scala.collection.TraversableLike.last", "link" : "math\/ana\/GradientDescent.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.tail", "link" : "math\/ana\/GradientDescent.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[GradientDescent]", "member" : "scala.collection.TraversableLike.headOption", "link" : "math\/ana\/GradientDescent.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): GradientDescent", "member" : "scala.collection.TraversableLike.head", "link" : "math\/ana\/GradientDescent.html#head:A", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (GradientDescent, B) ⇒ B)(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "math\/ana\/GradientDescent.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, GradientDescent) ⇒ B)(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "math\/ana\/GradientDescent.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "math\/ana\/GradientDescent.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "find", "tail" : "(p: (GradientDescent) ⇒ Boolean): Option[GradientDescent]", "member" : "scala.collection.TraversableLike.find", "link" : "math\/ana\/GradientDescent.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (GradientDescent) ⇒ Boolean): Boolean", "member" : "scala.collection.TraversableLike.exists", "link" : "math\/ana\/GradientDescent.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (GradientDescent) ⇒ Boolean): Boolean", "member" : "scala.collection.TraversableLike.forall", "link" : "math\/ana\/GradientDescent.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (GradientDescent) ⇒ K): Map[K, Traversable[GradientDescent]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "math\/ana\/GradientDescent.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (GradientDescent) ⇒ Boolean): (Traversable[GradientDescent], Traversable[GradientDescent])", "member" : "scala.collection.TraversableLike.partition", "link" : "math\/ana\/GradientDescent.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[GradientDescent, B])(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "math\/ana\/GradientDescent.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (GradientDescent) ⇒ Boolean): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "math\/ana\/GradientDescent.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (GradientDescent) ⇒ Boolean): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.filter", "link" : "math\/ana\/GradientDescent.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (GradientDescent) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "math\/ana\/GradientDescent.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (GradientDescent) ⇒ B)(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "math\/ana\/GradientDescent.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/ana\/GradientDescent.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "math\/ana\/GradientDescent.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Traversable[GradientDescent], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "math\/ana\/GradientDescent.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "math\/ana\/GradientDescent.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isEmpty", "link" : "math\/ana\/GradientDescent.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[GradientDescent, ParIterable[GradientDescent]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "math\/ana\/GradientDescent.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Traversable[GradientDescent]): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.toCollection", "link" : "math\/ana\/GradientDescent.html#toCollection(repr:Repr):Traversable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.thisCollection", "link" : "math\/ana\/GradientDescent.html#thisCollection:Traversable[A]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "math\/ana\/GradientDescent.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Traversable[GradientDescent]", "member" : "scala.collection.TraversableLike.repr", "link" : "math\/ana\/GradientDescent.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "math\/ana\/GradientDescent.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[GradientDescent]", "member" : "scala.collection.Parallelizable.par", "link" : "math\/ana\/GradientDescent.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/ana\/GradientDescent.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/ana\/GradientDescent.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "math\/ana\/GradientDescent.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/ana\/GradientDescent.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/ana\/GradientDescent.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "math\/ana\/GradientDescent.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[GradientDescent, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "math\/ana\/GradientDescent.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[GradientDescent]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "math\/ana\/GradientDescent.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "math\/ana\/GradientDescent.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "math\/ana\/GradientDescent.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[GradientDescent]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "math\/ana\/GradientDescent.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[GradientDescent]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "math\/ana\/GradientDescent.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[GradientDescent]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "math\/ana\/GradientDescent.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[GradientDescent]", "member" : "scala.collection.TraversableOnce.toList", "link" : "math\/ana\/GradientDescent.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "math\/ana\/GradientDescent.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/ana\/GradientDescent.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "math\/ana\/GradientDescent.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "math\/ana\/GradientDescent.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (GradientDescent) ⇒ B)(cmp: Ordering[B]): GradientDescent", "member" : "scala.collection.TraversableOnce.minBy", "link" : "math\/ana\/GradientDescent.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (GradientDescent) ⇒ B)(cmp: Ordering[B]): GradientDescent", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "math\/ana\/GradientDescent.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): GradientDescent", "member" : "scala.collection.TraversableOnce.max", "link" : "math\/ana\/GradientDescent.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): GradientDescent", "member" : "scala.collection.TraversableOnce.min", "link" : "math\/ana\/GradientDescent.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "math\/ana\/GradientDescent.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "math\/ana\/GradientDescent.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, GradientDescent) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "math\/ana\/GradientDescent.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "math\/ana\/GradientDescent.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "math\/ana\/GradientDescent.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "math\/ana\/GradientDescent.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (GradientDescent, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "math\/ana\/GradientDescent.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, GradientDescent) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "math\/ana\/GradientDescent.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (GradientDescent, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "math\/ana\/GradientDescent.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, GradientDescent) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "math\/ana\/GradientDescent.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (GradientDescent, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "math\/ana\/GradientDescent.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, GradientDescent) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "math\/ana\/GradientDescent.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (GradientDescent, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "math\/ana\/GradientDescent.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, GradientDescent) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "math\/ana\/GradientDescent.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[GradientDescent, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "math\/ana\/GradientDescent.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (GradientDescent) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "math\/ana\/GradientDescent.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "math\/ana\/GradientDescent.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "math\/ana\/GradientDescent.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[GradientDescent]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "math\/ana\/GradientDescent.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "math\/ana\/GradientDescent.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "math\/ana\/GradientDescent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "math\/ana\/GradientDescent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "math\/ana\/GradientDescent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "math\/ana\/GradientDescent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "math\/ana\/GradientDescent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "math\/ana\/GradientDescent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "math\/ana\/GradientDescent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/GradientDescent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/GradientDescent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "math\/ana\/GradientDescent.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "math\/ana\/GradientDescent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "math\/ana\/GradientDescent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "math\/ana\/GradientDescent.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "math\/ana\/GradientDescent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "math\/ana\/GradientDescent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "math\/ana\/GradientDescent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "math\/ana\/GradientDescent.html", "kind" : "case class"}], "io" : [{"name" : "io.Arr", "shortDescription" : "JSON Array", "members_case class" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toArr", "tail" : "(): Success[Arr]", "member" : "io.Arr.toArr", "link" : "io\/Arr.html#toArr:scala.util.Success[io.Arr]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.Arr.toString", "link" : "io\/Arr.html#toString():String", "kind" : "def"}, {"member" : "io.Arr#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[Json]", "member" : "io.Arr.values", "link" : "io\/Arr.html#values:Seq[io.Json]", "kind" : "val"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Arr.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Arr.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Arr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Arr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Arr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Arr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Arr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Arr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Arr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Arr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Arr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Arr.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Arr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Arr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Arr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Arr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Arr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Arr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/Arr.html", "kind" : "case class"}, {"name" : "io.Collection", "members_trait" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Collection.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Collection.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Collection.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Collection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Collection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Collection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Collection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Collection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Collection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Collection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Collection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Collection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Collection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Collection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Collection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/Collection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Collection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Collection.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Collection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Collection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Collection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Collection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "values", "tail" : "(): Seq[Json]", "member" : "io.Collection.values", "link" : "io\/Collection.html#values:Seq[io.Json]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/Collection.html", "kind" : "trait"}, {"name" : "io.False", "shortDescription" : "JSON false singleton.", "object" : "io\/False$.html", "members_object" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toString", "tail" : ": String", "member" : "io.Sym.toString", "link" : "io\/False$.html#toString:String", "kind" : "val"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/False$.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/False$.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/False$.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/False$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/False$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/False$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/False$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/False$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/False$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/False$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/False$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/False$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/False$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/False$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/False$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/False$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/False$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/False$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/False$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/False$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.Json", "members_trait" : [{"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Json.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Json.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Json.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Json.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Json.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Json.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Json.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Json.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Json.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Json.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Json.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Json.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Json.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Json.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Json.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/Json.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Json.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Json.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Json.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Json.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Json.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Json.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "JSON object", "object" : "io\/Json$.html", "members_object" : [{"label" : "Parsers", "tail" : "", "member" : "io.Json.Parsers", "link" : "io\/Json$.html#Parsers", "kind" : "object"}, {"label" : "apply", "tail" : "(parseMe: String): Json", "member" : "io.Json.apply", "link" : "io\/Json$.html#apply(parseMe:String):io.Json", "kind" : "def"}, {"label" : "parse", "tail" : "(parseMe: String): Try[Json]", "member" : "io.Json.parse", "link" : "io\/Json$.html#parse(parseMe:String):scala.util.Try[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Json$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Json$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Json$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Json$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Json$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Json$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Json$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Json$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Json$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Json$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Json$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Json$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/Json$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Json$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Json$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Json$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Json$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Json$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Json$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/Json.html", "kind" : "trait"}, {"name" : "io.Lit", "members_trait" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Lit.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Lit.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Lit.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Lit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Lit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Lit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Lit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Lit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Lit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Lit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Lit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Lit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Lit.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Lit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Lit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/Lit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Lit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Lit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Lit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Lit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Lit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Lit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : "(): A", "member" : "io.Lit.value", "link" : "io\/Lit.html#value:A", "kind" : "abstract def"}], "shortDescription" : "JSON literal, i.e.", "trait" : "io\/Lit.html", "kind" : "trait"}, {"name" : "io.Null", "shortDescription" : "JSON null singleton.", "object" : "io\/Null$.html", "members_object" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toString", "tail" : ": String", "member" : "io.Sym.toString", "link" : "io\/Null$.html#toString:String", "kind" : "val"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Null$.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Null$.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Null$.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Null$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Null$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Null$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Null$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Null$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Null$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Null$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Null$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Null$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Null$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Null$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Null$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Null$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Null$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Null$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Null$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Null$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.Num", "shortDescription" : "JSON number", "object" : "io\/Num$.html", "members_object" : [{"label" : "apply", "tail" : "(s: String): Num", "member" : "io.Num.apply", "link" : "io\/Num$.html#apply(s:String):io.Num", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Num$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Num$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Num$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Num$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Num$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Num$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Num$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Num$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Num$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Num$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Num$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Num$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/Num$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Num$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Num$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Num$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Num$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Num$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Num$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toNum", "tail" : "(): Success[Num]", "member" : "io.Num.toNum", "link" : "io\/Num.html#toNum:scala.util.Success[io.Num]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.Num.toString", "link" : "io\/Num.html#toString():String", "kind" : "def"}, {"member" : "io.Num#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Double", "member" : "io.Num.value", "link" : "io\/Num.html#value:Double", "kind" : "val"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Num.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Num.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Num.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Num.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Num.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Num.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Num.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Num.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Num.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Num.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Num.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Num.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Num.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Num.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Num.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Num.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Num.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Num.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/Num.html", "kind" : "case class"}, {"name" : "io.Obj", "shortDescription" : "JSON Object Maintains entry order.", "members_case class" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toString", "tail" : "(): String", "member" : "io.Obj.toString", "link" : "io\/Obj.html#toString():String", "kind" : "def"}, {"label" : "values", "tail" : "(): Seq[Json]", "member" : "io.Obj.values", "link" : "io\/Obj.html#values:Seq[io.Json]", "kind" : "def"}, {"member" : "io.Obj#<init>", "error" : "unsupported entity"}, {"label" : "pairs", "tail" : ": Map[String, Json]", "member" : "io.Obj.pairs", "link" : "io\/Obj.html#pairs:Map[String,io.Json]", "kind" : "val"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Obj.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Obj.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Obj.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Obj.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Obj.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Obj.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Obj.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Obj.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Obj.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Obj.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Obj.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Obj.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Obj.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Obj.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Obj.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Obj.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Obj.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Obj.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Obj.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/Obj.html", "kind" : "case class"}, {"name" : "io.Reader", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "io.Reader.toString", "link" : "io\/Reader.html#toString():String", "kind" : "def"}, {"label" : "next", "tail" : "(n: Int): String", "member" : "io.Reader.next", "link" : "io\/Reader.html#next(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Reader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Reader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Reader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Reader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Reader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Reader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Reader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Reader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Reader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Reader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Reader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Reader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Reader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Reader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Reader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Reader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Reader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Reader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pos", "tail" : "(): Int", "member" : "io.Reader.pos", "link" : "io\/Reader.html#pos:Int", "kind" : "abstract def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "io.Reader.hasNext", "link" : "io\/Reader.html#hasNext:Boolean", "kind" : "abstract def"}, {"label" : "next", "tail" : "(): Reader", "member" : "io.Reader.next", "link" : "io\/Reader.html#next:io.Reader", "kind" : "abstract def"}, {"label" : "char", "tail" : "(): Char", "member" : "io.Reader.char", "link" : "io\/Reader.html#char:Char", "kind" : "abstract def"}], "shortDescription" : "Functional version of scala.io.Source", "object" : "io\/Reader$.html", "members_object" : [{"label" : "apply", "tail" : "(s: String): Reader", "member" : "io.Reader.apply", "link" : "io\/Reader$.html#apply(s:String):io.Reader", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Reader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Reader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Reader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Reader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Reader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Reader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Reader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Reader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Reader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Reader$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Reader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Reader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/Reader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Reader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Reader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Reader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Reader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Reader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Reader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/Reader.html", "kind" : "trait"}, {"name" : "io.Str", "shortDescription" : "JSON string", "object" : "io\/Str$.html", "members_object" : [{"label" : "apply", "tail" : "(cs: Seq[String]): Str", "member" : "io.Str.apply", "link" : "io\/Str$.html#apply(cs:Seq[String]):io.Str", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Str$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Str$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Str$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Str$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Str$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Str$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Str$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Str$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Str$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Str$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Str$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Str$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/Str$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Str$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Str$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Str$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Str$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Str$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Str$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toString", "tail" : "(): String", "member" : "io.Str.toString", "link" : "io\/Str.html#toString():String", "kind" : "def"}, {"member" : "io.Str#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "io.Str.value", "link" : "io\/Str.html#value:String", "kind" : "val"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Str.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Str.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Str.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Str.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Str.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Str.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Str.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Str.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Str.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Str.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Str.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Str.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Str.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Str.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Str.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Str.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Str.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Str.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Str.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/Str.html", "kind" : "case class"}, {"name" : "io.Sym", "shortDescription" : "JSON symbol: True, False, or NUll.", "members_class" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"member" : "io.Sym#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : ": String", "member" : "io.Sym.toString", "link" : "io\/Sym.html#toString:String", "kind" : "val"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/Sym.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/Sym.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/Sym.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/Sym.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/Sym.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/Sym.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/Sym.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/Sym.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/Sym.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/Sym.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Sym.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Sym.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/Sym.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/Sym.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/Sym.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/Sym.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/Sym.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/Sym.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/Sym.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/Sym.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/Sym.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/Sym.html", "kind" : "class"}, {"name" : "io.True", "shortDescription" : "JSON true singleton.", "object" : "io\/True$.html", "members_object" : [{"label" : "JsonException", "tail" : "", "member" : "io.Json.JsonException", "link" : "io\/Json.html#JsonExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "toString", "tail" : ": String", "member" : "io.Sym.toString", "link" : "io\/True$.html#toString:String", "kind" : "val"}, {"label" : "toArr", "tail" : "(): Try[Arr]", "member" : "io.Json.toArr", "link" : "io\/True$.html#toArr:scala.util.Try[io.Arr]", "kind" : "def"}, {"label" : "toNum", "tail" : "(): Try[Num]", "member" : "io.Json.toNum", "link" : "io\/True$.html#toNum:scala.util.Try[io.Num]", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Json]", "member" : "io.Json.tree", "link" : "io\/True$.html#tree:util.Tree[io.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/True$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/True$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/True$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/True$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/True$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/True$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/True$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/True$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/True$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/True$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/True$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/True$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/True$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/True$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/True$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/True$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/True$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.parse" : [{"name" : "io.parse.Chars", "shortDescription" : "Parses next n characters from stream(or until its end) into string.", "members_case class" : [{"label" : "apply", "tail" : "(start: Reader): Match[String]", "member" : "io.parse.Chars.apply", "link" : "io\/parse\/Chars.html#apply(start:io.Reader):io.parse.Match[String]", "kind" : "def"}, {"member" : "io.parse.Chars#<init>", "error" : "unsupported entity"}, {"label" : "n", "tail" : ": Int", "member" : "io.parse.Chars.n", "link" : "io\/parse\/Chars.html#n:Int", "kind" : "val"}, {"label" : ">", "tail" : "(f: (String) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Chars.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Chars.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Chars.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[String]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Chars.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Chars.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Chars.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Chars.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Chars.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Chars.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Chars.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Chars.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Chars.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Chars.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Chars.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Chars.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Chars.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Chars.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Chars.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Chars.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Chars.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Chars.html", "kind" : "case class"}, {"name" : "io.parse.Cons", "shortDescription" : "Parses predefined string", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.parse.Cons.toString", "link" : "io\/parse\/Cons.html#toString():String", "kind" : "def"}, {"label" : "apply", "tail" : "(r: Reader): Result[String]", "member" : "io.parse.Cons.apply", "link" : "io\/parse\/Cons.html#apply(r:io.Reader):io.parse.Result[String]", "kind" : "def"}, {"member" : "io.parse.Cons#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": String", "member" : "io.parse.Cons.s", "link" : "io\/parse\/Cons.html#s:String", "kind" : "val"}, {"label" : ">", "tail" : "(f: (String) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Cons.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Cons.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Cons.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[String]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Cons.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Cons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Cons.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Cons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Cons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Cons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Cons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Cons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Cons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Cons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Cons.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Cons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Cons.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Cons.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Cons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Cons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Cons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Cons.html", "kind" : "case class"}, {"name" : "io.parse.Fail", "shortDescription" : "", "object" : "io\/parse\/Fail$.html", "members_object" : [{"label" : "apply", "tail" : "(f: Fail[_]): Fail[B]", "member" : "io.parse.Fail.apply", "link" : "io\/parse\/Fail$.html#apply[B](f:io.parse.Fail[_]):io.parse.Fail[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Fail$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Fail$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Fail$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Fail$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Fail$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Fail$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Fail$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Fail$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Fail$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Fail$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Fail$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Fail$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/parse\/Fail$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Fail$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/parse\/Fail$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/parse\/Fail$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Fail$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Fail$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Fail$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toMatch", "tail" : "(): Nothing", "member" : "io.parse.Fail.toMatch", "link" : "io\/parse\/Fail.html#toMatch:Nothing", "kind" : "def"}, {"label" : "atFail", "tail" : "(f: (Fail[A]) ⇒ Result[B]): Result[B]", "member" : "io.parse.Fail.atFail", "link" : "io\/parse\/Fail.html#atFail[B>:A](f:io.parse.Fail[A]=>io.parse.Result[B]):io.parse.Result[B]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.parse.Fail.toString", "link" : "io\/parse\/Fail.html#toString():String", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Match[A]) ⇒ Result[B]): Fail[B]", "member" : "io.parse.Fail.apply", "link" : "io\/parse\/Fail.html#apply[B](f:io.parse.Match[A]=>io.parse.Result[B]):io.parse.Fail[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Fail[B]", "member" : "io.parse.Fail.map", "link" : "io\/parse\/Fail.html#map[B](f:A=>B):io.parse.Fail[B]", "kind" : "def"}, {"member" : "io.parse.Fail#<init>", "error" : "unsupported entity"}, {"label" : "follow", "tail" : ": Reader", "member" : "io.parse.Fail.follow", "link" : "io\/parse\/Fail.html#follow:io.Reader", "kind" : "val"}, {"label" : "parser", "tail" : ": Parser[_]", "member" : "io.parse.Fail.parser", "link" : "io\/parse\/Fail.html#parser:io.parse.Parser[_]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Fail.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Fail.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Fail.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Fail.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Fail.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Fail.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Fail.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Fail.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Fail.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Fail.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Fail.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Fail.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Fail.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Fail.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Fail.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Fail.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Fail.html", "kind" : "case class"}, {"name" : "io.parse.Gate", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[B]", "member" : "io.parse.Gate.apply", "link" : "io\/parse\/Gate.html#apply(r:io.Reader):io.parse.Result[B]", "kind" : "def"}, {"member" : "io.parse.Gate#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": Parser[C]", "member" : "io.parse.Gate.end", "link" : "io\/parse\/Gate.html#end:io.parse.Parser[C]", "kind" : "val"}, {"label" : "p", "tail" : ": Parser[B]", "member" : "io.parse.Gate.p", "link" : "io\/parse\/Gate.html#p:io.parse.Parser[B]", "kind" : "val"}, {"label" : "start", "tail" : ": Parser[A]", "member" : "io.parse.Gate.start", "link" : "io\/parse\/Gate.html#start:io.parse.Parser[A]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (B) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Gate.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Gate.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Gate.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[B]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Gate.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Gate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Gate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Gate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Gate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Gate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Gate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Gate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Gate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Gate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Gate.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Gate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Gate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Gate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Gate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Gate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Gate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Gate.html", "kind" : "case class"}, {"name" : "io.parse.Match", "shortDescription" : "", "members_case class" : [{"label" : "toMatch", "tail" : "(): Match[A]", "member" : "io.parse.Match.toMatch", "link" : "io\/parse\/Match.html#toMatch:io.parse.Match[A]", "kind" : "def"}, {"label" : "add", "tail" : "(m: Match[B])(f: (A, B) ⇒ C): Match[C]", "member" : "io.parse.Match.add", "link" : "io\/parse\/Match.html#add[B,C](m:io.parse.Match[B])(f:(A,B)=>C):io.parse.Match[C]", "kind" : "def"}, {"label" : "atFail", "tail" : "(f: (Fail[A]) ⇒ Result[B]): Match[A]", "member" : "io.parse.Match.atFail", "link" : "io\/parse\/Match.html#atFail[B>:A](f:io.parse.Fail[A]=>io.parse.Result[B]):io.parse.Match[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Match[A]) ⇒ Result[B]): Result[B]", "member" : "io.parse.Match.apply", "link" : "io\/parse\/Match.html#apply[B](f:io.parse.Match[A]=>io.parse.Result[B]):io.parse.Result[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Match[B]", "member" : "io.parse.Match.map", "link" : "io\/parse\/Match.html#map[B](f:A=>B):io.parse.Match[B]", "kind" : "def"}, {"member" : "io.parse.Match#<init>", "error" : "unsupported entity"}, {"label" : "follow", "tail" : ": Reader", "member" : "io.parse.Match.follow", "link" : "io\/parse\/Match.html#follow:io.Reader", "kind" : "val"}, {"label" : "result", "tail" : ": A", "member" : "io.parse.Match.result", "link" : "io\/parse\/Match.html#result:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Match.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Match.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Match.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Match.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Match.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Match.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Match.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Match.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Match.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Match.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Match.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Match.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Match.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Match.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Match.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Match.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Match.html", "kind" : "case class"}, {"name" : "io.parse.OneOf", "shortDescription" : "Any character of given set", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[Char]", "member" : "io.parse.OneOf.apply", "link" : "io\/parse\/OneOf.html#apply(r:io.Reader):io.parse.Result[Char]", "kind" : "def"}, {"member" : "io.parse.OneOf#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Set[Char]", "member" : "io.parse.OneOf.c", "link" : "io\/parse\/OneOf.html#c:Set[Char]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (Char) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/OneOf.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/OneOf.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/OneOf.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[Char]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/OneOf.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/OneOf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/OneOf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/OneOf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/OneOf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/OneOf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/OneOf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/OneOf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/OneOf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/OneOf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/OneOf.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/OneOf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/OneOf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/OneOf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/OneOf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/OneOf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/OneOf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/OneOf.html", "kind" : "case class"}, {"name" : "io.parse.Optional", "shortDescription" : "Repeats parsing at least min an at most max.", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[Seq[A]]", "member" : "io.parse.Optional.apply", "link" : "io\/parse\/Optional.html#apply(r:io.Reader):io.parse.Result[Seq[A]]", "kind" : "def"}, {"member" : "io.parse.Optional#<init>", "error" : "unsupported entity"}, {"label" : "p", "tail" : ": Parser[Seq[A]]", "member" : "io.parse.Optional.p", "link" : "io\/parse\/Optional.html#p:io.parse.Parser[Seq[A]]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (Seq[A]) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Optional.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Optional.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Optional.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[Seq[A]]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Optional.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Optional.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Optional.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Optional.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Optional.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Optional.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Optional.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Optional.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Optional.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Optional.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Optional.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Optional.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Optional.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Optional.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Optional.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Optional.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Optional.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Optional.html", "kind" : "case class"}, {"name" : "io.parse.Or", "shortDescription" : "Parses p1 if matching otherwise p2", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[A]", "member" : "io.parse.Or.apply", "link" : "io\/parse\/Or.html#apply(r:io.Reader):io.parse.Result[A]", "kind" : "def"}, {"member" : "io.parse.Or#<init>", "error" : "unsupported entity"}, {"label" : "p2", "tail" : ": Parser[A]", "member" : "io.parse.Or.p2", "link" : "io\/parse\/Or.html#p2:io.parse.Parser[A]", "kind" : "val"}, {"label" : "p1", "tail" : ": Parser[A]", "member" : "io.parse.Or.p1", "link" : "io\/parse\/Or.html#p1:io.parse.Parser[A]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (A) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Or.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Or.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Or.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[A]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Or.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Or.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Or.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Or.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Or.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Or.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Or.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Or.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Or.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Or.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Or.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Or.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Or.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Or.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Or.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Or.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Or.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Or.html", "kind" : "case class"}, {"name" : "io.parse.ParseException", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.parse.ParseException.toString", "link" : "io\/parse\/ParseException.html#toString():String", "kind" : "def"}, {"member" : "io.parse.ParseException#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": Fail[A]", "member" : "io.parse.ParseException.f", "link" : "io\/parse\/ParseException.html#f:io.parse.Fail[A]", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/parse\/ParseException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/parse\/ParseException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/parse\/ParseException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/parse\/ParseException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/parse\/ParseException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/parse\/ParseException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/parse\/ParseException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/parse\/ParseException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/parse\/ParseException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/parse\/ParseException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/parse\/ParseException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/parse\/ParseException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/ParseException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/ParseException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/ParseException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/ParseException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/ParseException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/ParseException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/ParseException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/ParseException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/ParseException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/ParseException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/ParseException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/ParseException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/ParseException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/ParseException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/ParseException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/ParseException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/ParseException.html", "kind" : "case class"}, {"name" : "io.parse.Parser", "members_trait" : [{"label" : ">", "tail" : "(f: (A) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Parser.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Parser.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Parser.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[A]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Parser.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Parser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Parser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Parser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Parser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Parser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Parser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Parser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Parser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Parser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Parser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Parser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Parser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/parse\/Parser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Parser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/parse\/Parser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/parse\/Parser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Parser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Parser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Parser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(r: Reader): Result[A]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Parser.html#apply(r:io.Reader):io.parse.Result[A]", "kind" : "abstract def"}], "shortDescription" : "Produces a Result from a Reader.", "object" : "io\/parse\/Parser$.html", "members_object" : [{"label" : "test", "tail" : "(): Unit", "member" : "io.parse.Parser.test", "link" : "io\/parse\/Parser$.html#test:Unit", "kind" : "def"}, {"label" : "Parser2SeqParser", "tail" : "", "member" : "io.parse.Parser.Parser2SeqParser", "link" : "io\/parse\/Parser$.html#Parser2SeqParser[+A]extendsParser[Seq[A]]", "kind" : "implicit class"}, {"label" : "Str2Cons", "tail" : "", "member" : "io.parse.Parser.Str2Cons", "link" : "io\/parse\/Parser$.html#Str2ConsextendsCons", "kind" : "implicit class"}, {"label" : "Spaces", "tail" : ": Repeat[Char]", "member" : "io.parse.Parser.Spaces", "link" : "io\/parse\/Parser$.html#Spaces:io.parse.Repeat[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Parser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Parser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Parser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Parser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Parser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Parser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Parser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Parser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Parser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Parser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Parser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Parser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/parse\/Parser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Parser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/parse\/Parser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/parse\/Parser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Parser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Parser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Parser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/parse\/Parser.html", "kind" : "trait"}, {"name" : "io.parse.Postfix", "shortDescription" : "Parses p and consumes post.", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[A]", "member" : "io.parse.Postfix.apply", "link" : "io\/parse\/Postfix.html#apply(r:io.Reader):io.parse.Result[A]", "kind" : "def"}, {"member" : "io.parse.Postfix#<init>", "error" : "unsupported entity"}, {"label" : "post", "tail" : ": Parser[B]", "member" : "io.parse.Postfix.post", "link" : "io\/parse\/Postfix.html#post:io.parse.Parser[B]", "kind" : "val"}, {"label" : "p", "tail" : ": Parser[A]", "member" : "io.parse.Postfix.p", "link" : "io\/parse\/Postfix.html#p:io.parse.Parser[A]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (A) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Postfix.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Postfix.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Postfix.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[A]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Postfix.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Postfix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Postfix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Postfix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Postfix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Postfix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Postfix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Postfix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Postfix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Postfix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Postfix.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Postfix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Postfix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Postfix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Postfix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Postfix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Postfix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Postfix.html", "kind" : "case class"}, {"name" : "io.parse.Prefix", "shortDescription" : "Consumes pre and parses p", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[B]", "member" : "io.parse.Prefix.apply", "link" : "io\/parse\/Prefix.html#apply(r:io.Reader):io.parse.Result[B]", "kind" : "def"}, {"member" : "io.parse.Prefix#<init>", "error" : "unsupported entity"}, {"label" : "p", "tail" : ": Parser[B]", "member" : "io.parse.Prefix.p", "link" : "io\/parse\/Prefix.html#p:io.parse.Parser[B]", "kind" : "val"}, {"label" : "pre", "tail" : ": Parser[A]", "member" : "io.parse.Prefix.pre", "link" : "io\/parse\/Prefix.html#pre:io.parse.Parser[A]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (B) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Prefix.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Prefix.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Prefix.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[B]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Prefix.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Prefix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Prefix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Prefix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Prefix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Prefix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Prefix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Prefix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Prefix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Prefix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Prefix.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Prefix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Prefix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Prefix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Prefix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Prefix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Prefix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Prefix.html", "kind" : "case class"}, {"name" : "io.parse.Regex", "shortDescription" : "Find prefix Regex match within next n characters of stream", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.parse.Regex.toString", "link" : "io\/parse\/Regex.html#toString():String", "kind" : "def"}, {"label" : "apply", "tail" : "(r: Reader): Result[String]", "member" : "io.parse.Regex.apply", "link" : "io\/parse\/Regex.html#apply(r:io.Reader):io.parse.Result[String]", "kind" : "def"}, {"member" : "io.parse.Regex#<init>", "error" : "unsupported entity"}, {"label" : "n", "tail" : ": Int", "member" : "io.parse.Regex.n", "link" : "io\/parse\/Regex.html#n:Int", "kind" : "val"}, {"label" : ">", "tail" : "(f: (String) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Regex.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Regex.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Regex.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[String]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Regex.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Regex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Regex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Regex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Regex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Regex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Regex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Regex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Regex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Regex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Regex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Regex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Regex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Regex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Regex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Regex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Regex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Regex.html", "kind" : "case class"}, {"name" : "io.parse.Repeat", "shortDescription" : "Repeats parsing at least min an at most max.", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[Seq[A]]", "member" : "io.parse.Repeat.apply", "link" : "io\/parse\/Repeat.html#apply(r:io.Reader):io.parse.Result[Seq[A]]", "kind" : "def"}, {"member" : "io.parse.Repeat#<init>", "error" : "unsupported entity"}, {"label" : "max", "tail" : ": Int", "member" : "io.parse.Repeat.max", "link" : "io\/parse\/Repeat.html#max:Int", "kind" : "val"}, {"label" : "min", "tail" : ": Int", "member" : "io.parse.Repeat.min", "link" : "io\/parse\/Repeat.html#min:Int", "kind" : "val"}, {"label" : "p", "tail" : ": Parser[Seq[A]]", "member" : "io.parse.Repeat.p", "link" : "io\/parse\/Repeat.html#p:io.parse.Parser[Seq[A]]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (Seq[A]) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Repeat.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Repeat.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Repeat.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[Seq[A]]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Repeat.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Repeat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Repeat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Repeat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Repeat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Repeat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Repeat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Repeat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Repeat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Repeat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Repeat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Repeat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Repeat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Repeat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Repeat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Repeat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Repeat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Repeat.html", "kind" : "case class"}, {"name" : "io.parse.Result", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Result.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Result.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Result.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Result.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Result.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Result.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Result.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Result.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Result.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Result.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Result.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Result.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/parse\/Result.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Result.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/parse\/Result.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/parse\/Result.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Result.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Result.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Result.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toMatch", "tail" : "(): Match[A]", "member" : "io.parse.Result.toMatch", "link" : "io\/parse\/Result.html#toMatch:io.parse.Match[A]", "kind" : "abstract def"}, {"label" : "atFail", "tail" : "(f: (Fail[A]) ⇒ Result[B]): Result[B]", "member" : "io.parse.Result.atFail", "link" : "io\/parse\/Result.html#atFail[B>:A](f:io.parse.Fail[A]=>io.parse.Result[B]):io.parse.Result[B]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(f: (Match[A]) ⇒ Result[B]): Result[B]", "member" : "io.parse.Result.apply", "link" : "io\/parse\/Result.html#apply[B](f:io.parse.Match[A]=>io.parse.Result[B]):io.parse.Result[B]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Result[B]", "member" : "io.parse.Result.map", "link" : "io\/parse\/Result.html#map[B](f:A=>B):io.parse.Result[B]", "kind" : "abstract def"}, {"label" : "follow", "tail" : "(): Reader", "member" : "io.parse.Result.follow", "link" : "io\/parse\/Result.html#follow:io.Reader", "kind" : "abstract def"}], "shortDescription" : "Result of applying Parser to Stream", "trait" : "io\/parse\/Result.html", "kind" : "trait"}, {"name" : "io.parse.Then", "shortDescription" : "p1 followed by p2 *", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[Seq[A]]", "member" : "io.parse.Then.apply", "link" : "io\/parse\/Then.html#apply(r:io.Reader):io.parse.Result[Seq[A]]", "kind" : "def"}, {"member" : "io.parse.Then#<init>", "error" : "unsupported entity"}, {"label" : "p2", "tail" : ": Parser[Seq[A]]", "member" : "io.parse.Then.p2", "link" : "io\/parse\/Then.html#p2:io.parse.Parser[Seq[A]]", "kind" : "val"}, {"label" : "p1", "tail" : ": Parser[Seq[A]]", "member" : "io.parse.Then.p1", "link" : "io\/parse\/Then.html#p1:io.parse.Parser[Seq[A]]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (Seq[A]) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Then.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Then.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Then.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[Seq[A]]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Then.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Then.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Then.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Then.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Then.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Then.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Then.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Then.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Then.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Then.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Then.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Then.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Then.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Then.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Then.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Then.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Then.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Then.html", "kind" : "case class"}, {"name" : "io.parse.Trans", "shortDescription" : "Translates Match via function.", "members_case class" : [{"label" : "apply", "tail" : "(r: Reader): Result[B]", "member" : "io.parse.Trans.apply", "link" : "io\/parse\/Trans.html#apply(r:io.Reader):io.parse.Result[B]", "kind" : "def"}, {"member" : "io.parse.Trans#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": (A) ⇒ B", "member" : "io.parse.Trans.f", "link" : "io\/parse\/Trans.html#f:A=>B", "kind" : "val"}, {"label" : "p", "tail" : ": Parser[A]", "member" : "io.parse.Trans.p", "link" : "io\/parse\/Trans.html#p:io.parse.Parser[A]", "kind" : "val"}, {"label" : ">", "tail" : "(f: (B) ⇒ B): Parser[B]", "member" : "io.parse.Parser.>", "link" : "io\/parse\/Trans.html#>[B](f:A=>B):io.parse.Parser[B]", "kind" : "def"}, {"label" : "|", "tail" : "(p: Parser[B]): Parser[B]", "member" : "io.parse.Parser.|", "link" : "io\/parse\/Trans.html#|[B>:A](p:io.parse.Parser[B]):io.parse.Parser[B]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[B]): Parser[Seq[B]]", "member" : "io.parse.Parser.~", "link" : "io\/parse\/Trans.html#~[B>:A](p:io.parse.Parser[B]):io.parse.Parser[Seq[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: String): Result[B]", "member" : "io.parse.Parser.apply", "link" : "io\/parse\/Trans.html#apply(s:String):io.parse.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/parse\/Trans.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/parse\/Trans.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/parse\/Trans.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/parse\/Trans.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/parse\/Trans.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/parse\/Trans.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/parse\/Trans.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Trans.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Trans.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/parse\/Trans.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/parse\/Trans.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/parse\/Trans.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/parse\/Trans.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/parse\/Trans.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/parse\/Trans.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/parse\/Trans.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/parse\/Trans.html", "kind" : "case class"}]};